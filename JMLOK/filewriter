Will add members for class Carro
Considering method private int Carro.g(int)
Will not use: private int Carro.g(int)
  reason: randoop.util.Reflection.isVisible(int modifiers) returned false 
Considering method private int Carro.h(int)
Will not use: private int Carro.h(int)
  reason: randoop.util.Reflection.isVisible(int modifiers) returned false 
Considering method public boolean java.lang.Object.equals(java.lang.Object)
Considering method public final native java.lang.Class java.lang.Object.getClass()
Considering method public final native void java.lang.Object.notify()
Considering method public final native void java.lang.Object.notifyAll()
Considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
Considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
Considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
Considering method public int Carro.f(int)
Considering method public int Carro.f(int)
Considering method public java.lang.String java.lang.Object.toString()
Considering method public native int java.lang.Object.hashCode()
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type class java.lang.String
Adding sequence to active sequences of type class java.lang.String
getActivesequencesThatYield: entering method, clazz=boolean
getActivesequencesThatYield: returning 2 sequences.
getActivesequencesThatYield: entering method, clazz=byte
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=char
getActivesequencesThatYield: returning 4 sequences.
getActivesequencesThatYield: entering method, clazz=double
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=float
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=short
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=class java.lang.String
getActivesequencesThatYield: returning 2 sequences.
Statements : 
Carro.f(int)
Carro.<init>()
java.lang.Object.<init>()
Initial sequences (seeds):
var0 =  prim : byte:-1 : 

var0 =  prim : byte:0 : 

var0 =  prim : byte:1 : 

var0 =  prim : byte:10 : 

var0 =  prim : byte:100 : 

var0 =  prim : short:-1 : 

var0 =  prim : short:0 : 

var0 =  prim : short:1 : 

var0 =  prim : short:10 : 

var0 =  prim : short:100 : 

var0 =  prim : int:-1 : 

var0 =  prim : int:0 : 

var0 =  prim : int:1 : 

var0 =  prim : int:10 : 

var0 =  prim : int:100 : 

var0 =  prim : long:-1 : 

var0 =  prim : long:0 : 

var0 =  prim : long:1 : 

var0 =  prim : long:10 : 

var0 =  prim : long:100 : 

var0 =  prim : float:-1.0 : 

var0 =  prim : float:0.0 : 

var0 =  prim : float:1.0 : 

var0 =  prim : float:10.0 : 

var0 =  prim : float:100.0 : 

var0 =  prim : double:-1.0 : 

var0 =  prim : double:0.0 : 

var0 =  prim : double:1.0 : 

var0 =  prim : double:10.0 : 

var0 =  prim : double:100.0 : 

var0 =  prim : char:23 : 

var0 =  prim : char:20 : 

var0 =  prim : char:34 : 

var0 =  prim : char:61 : 

var0 =  prim : boolean:true : 

var0 =  prim : boolean:false : 

var0 =  prim : java.lang.String:"" : 

var0 =  prim : java.lang.String:"hi!" : 

-------------------------------------------
randoop.util.Randomness: total calls to random: 1
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: found no sequences matching class class Carro
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2
Selected statement: Carro.<init>()
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;

allSequences.size()=1
-------------------------------------------
randoop.util.Randomness: total calls to random: 3
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 1 sequences.
components: 1
randoop.util.Randomness: total calls to random: 4
randoop.util.Randomness: total calls to random: 5
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 6
randoop.util.Randomness: total calls to random: 7
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true

allSequences.size()=2
-------------------------------------------
randoop.util.Randomness: total calls to random: 8
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 9
randoop.util.Randomness: total calls to random: 10
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 11
randoop.util.Randomness: total calls to random: 12
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=3
-------------------------------------------
randoop.util.Randomness: total calls to random: 13
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 3 sequences.
components: 3
randoop.util.Randomness: total calls to random: 14
randoop.util.Randomness: total calls to random: 15
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 16
randoop.util.Randomness: total calls to random: 17
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true

allSequences.size()=4
-------------------------------------------
randoop.util.Randomness: total calls to random: 18
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 4 sequences.
components: 4
randoop.util.Randomness: total calls to random: 19
randoop.util.Randomness: total calls to random: 20
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 21
randoop.util.Randomness: total calls to random: 22
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=5
-------------------------------------------
randoop.util.Randomness: total calls to random: 23
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 24
randoop.util.Randomness: total calls to random: 25
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 26
randoop.util.Randomness: total calls to random: 27
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true

allSequences.size()=6
-------------------------------------------
randoop.util.Randomness: total calls to random: 28
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 6 sequences.
components: 6
randoop.util.Randomness: total calls to random: 29
randoop.util.Randomness: total calls to random: 30
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 31
randoop.util.Randomness: total calls to random: 32
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true

allSequences.size()=7
-------------------------------------------
randoop.util.Randomness: total calls to random: 33
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 7 sequences.
components: 7
randoop.util.Randomness: total calls to random: 34
randoop.util.Randomness: total calls to random: 35
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 36
randoop.util.Randomness: total calls to random: 37
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=8
-------------------------------------------
randoop.util.Randomness: total calls to random: 38
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 8 sequences.
components: 8
randoop.util.Randomness: total calls to random: 39
randoop.util.Randomness: total calls to random: 40
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 41
randoop.util.Randomness: total calls to random: 42
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true

allSequences.size()=9
-------------------------------------------
randoop.util.Randomness: total calls to random: 43
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 9 sequences.
components: 9
randoop.util.Randomness: total calls to random: 44
randoop.util.Randomness: total calls to random: 45
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 46
randoop.util.Randomness: total calls to random: 47
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=10
-------------------------------------------
randoop.util.Randomness: total calls to random: 48
Selected statement: java.lang.Object.<init>()
Successfully created new unique sequence:var0 =  cons : java.lang.Object.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class java.lang.Object
Sequence after execution: 
java.lang.Object var0 = new java.lang.Object();
// <NormalExecution object=object-of-type-java.lang.Object>;

allSequences.size()=11
-------------------------------------------
randoop.util.Randomness: total calls to random: 49
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 10 sequences.
components: 10
randoop.util.Randomness: total calls to random: 50
randoop.util.Randomness: total calls to random: 51
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 52
randoop.util.Randomness: total calls to random: 53
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=12
-------------------------------------------
randoop.util.Randomness: total calls to random: 54
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 11 sequences.
components: 11
randoop.util.Randomness: total calls to random: 55
randoop.util.Randomness: total calls to random: 56
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 57
randoop.util.Randomness: total calls to random: 58
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true

allSequences.size()=13
-------------------------------------------
randoop.util.Randomness: total calls to random: 59
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 12 sequences.
components: 12
randoop.util.Randomness: total calls to random: 60
randoop.util.Randomness: total calls to random: 61
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 62
randoop.util.Randomness: total calls to random: 63
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=10 [var4]  : true

allSequences.size()=14
-------------------------------------------
randoop.util.Randomness: total calls to random: 64
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 13 sequences.
components: 13
randoop.util.Randomness: total calls to random: 65
randoop.util.Randomness: total calls to random: 66
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 67
randoop.util.Randomness: total calls to random: 68
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=15
-------------------------------------------
randoop.util.Randomness: total calls to random: 69
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 14 sequences.
components: 14
randoop.util.Randomness: total calls to random: 70
randoop.util.Randomness: total calls to random: 71
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 72
randoop.util.Randomness: total calls to random: 73
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=16
-------------------------------------------
randoop.util.Randomness: total calls to random: 74
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 15 sequences.
components: 15
randoop.util.Randomness: total calls to random: 75
randoop.util.Randomness: total calls to random: 76
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 77
randoop.util.Randomness: total calls to random: 78
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=17
-------------------------------------------
randoop.util.Randomness: total calls to random: 79
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 16 sequences.
components: 16
randoop.util.Randomness: total calls to random: 80
randoop.util.Randomness: total calls to random: 81
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 82
randoop.util.Randomness: total calls to random: 83
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true

allSequences.size()=18
-------------------------------------------
randoop.util.Randomness: total calls to random: 84
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 17 sequences.
components: 17
randoop.util.Randomness: total calls to random: 85
randoop.util.Randomness: total calls to random: 86
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 87
randoop.util.Randomness: total calls to random: 88
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=19
-------------------------------------------
randoop.util.Randomness: total calls to random: 89
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 18 sequences.
components: 18
randoop.util.Randomness: total calls to random: 90
randoop.util.Randomness: total calls to random: 91
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 92
randoop.util.Randomness: total calls to random: 93
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true

allSequences.size()=20
-------------------------------------------
randoop.util.Randomness: total calls to random: 94
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 19 sequences.
components: 19
randoop.util.Randomness: total calls to random: 95
randoop.util.Randomness: total calls to random: 96
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 97
randoop.util.Randomness: total calls to random: 98
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=21
-------------------------------------------
randoop.util.Randomness: total calls to random: 99
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 20 sequences.
components: 20
randoop.util.Randomness: total calls to random: 100
randoop.util.Randomness: total calls to random: 101
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 102
randoop.util.Randomness: total calls to random: 103
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=22
-------------------------------------------
randoop.util.Randomness: total calls to random: 104
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 21 sequences.
components: 21
randoop.util.Randomness: total calls to random: 105
randoop.util.Randomness: total calls to random: 106
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 107
randoop.util.Randomness: total calls to random: 108
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=23
-------------------------------------------
randoop.util.Randomness: total calls to random: 109
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 22 sequences.
components: 22
randoop.util.Randomness: total calls to random: 110
randoop.util.Randomness: total calls to random: 111
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 112
randoop.util.Randomness: total calls to random: 113
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 114
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 22 sequences.
components: 22
randoop.util.Randomness: total calls to random: 115
randoop.util.Randomness: total calls to random: 116
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 117
randoop.util.Randomness: total calls to random: 118
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=24
-------------------------------------------
randoop.util.Randomness: total calls to random: 119
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 23 sequences.
components: 23
randoop.util.Randomness: total calls to random: 120
randoop.util.Randomness: total calls to random: 121
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 122
randoop.util.Randomness: total calls to random: 123
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true

allSequences.size()=25
-------------------------------------------
randoop.util.Randomness: total calls to random: 124
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 24 sequences.
components: 24
randoop.util.Randomness: total calls to random: 125
randoop.util.Randomness: total calls to random: 126
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 127
randoop.util.Randomness: total calls to random: 128
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=26
-------------------------------------------
randoop.util.Randomness: total calls to random: 129
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 25 sequences.
components: 25
randoop.util.Randomness: total calls to random: 130
randoop.util.Randomness: total calls to random: 131
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 132
randoop.util.Randomness: total calls to random: 133
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 134
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 25 sequences.
components: 25
randoop.util.Randomness: total calls to random: 135
randoop.util.Randomness: total calls to random: 136
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 137
randoop.util.Randomness: total calls to random: 138
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=27
-------------------------------------------
randoop.util.Randomness: total calls to random: 139
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 26 sequences.
components: 26
randoop.util.Randomness: total calls to random: 140
randoop.util.Randomness: total calls to random: 141
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 142
randoop.util.Randomness: total calls to random: 143
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=28
-------------------------------------------
randoop.util.Randomness: total calls to random: 144
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 27 sequences.
components: 27
randoop.util.Randomness: total calls to random: 145
randoop.util.Randomness: total calls to random: 146
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 147
randoop.util.Randomness: total calls to random: 148
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=29
-------------------------------------------
randoop.util.Randomness: total calls to random: 149
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 28 sequences.
components: 28
randoop.util.Randomness: total calls to random: 150
randoop.util.Randomness: total calls to random: 151
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 152
randoop.util.Randomness: total calls to random: 153
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 154
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 28 sequences.
components: 28
randoop.util.Randomness: total calls to random: 155
randoop.util.Randomness: total calls to random: 156
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 157
randoop.util.Randomness: total calls to random: 158
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=30
-------------------------------------------
randoop.util.Randomness: total calls to random: 159
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 29 sequences.
components: 29
randoop.util.Randomness: total calls to random: 160
randoop.util.Randomness: total calls to random: 161
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 162
randoop.util.Randomness: total calls to random: 163
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=31
-------------------------------------------
randoop.util.Randomness: total calls to random: 164
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 30 sequences.
components: 30
randoop.util.Randomness: total calls to random: 165
randoop.util.Randomness: total calls to random: 166
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 167
randoop.util.Randomness: total calls to random: 168
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 169
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 30 sequences.
components: 30
randoop.util.Randomness: total calls to random: 170
randoop.util.Randomness: total calls to random: 171
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 172
randoop.util.Randomness: total calls to random: 173
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=32
-------------------------------------------
randoop.util.Randomness: total calls to random: 174
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 31 sequences.
components: 31
randoop.util.Randomness: total calls to random: 175
randoop.util.Randomness: total calls to random: 176
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 177
randoop.util.Randomness: total calls to random: 178
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true

allSequences.size()=33
-------------------------------------------
randoop.util.Randomness: total calls to random: 179
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 32 sequences.
components: 32
randoop.util.Randomness: total calls to random: 180
randoop.util.Randomness: total calls to random: 181
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 182
randoop.util.Randomness: total calls to random: 183
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 184
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 32 sequences.
components: 32
randoop.util.Randomness: total calls to random: 185
randoop.util.Randomness: total calls to random: 186
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 187
randoop.util.Randomness: total calls to random: 188
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true

allSequences.size()=34
-------------------------------------------
randoop.util.Randomness: total calls to random: 189
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 33 sequences.
components: 33
randoop.util.Randomness: total calls to random: 190
randoop.util.Randomness: total calls to random: 191
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 192
randoop.util.Randomness: total calls to random: 193
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true

allSequences.size()=35
-------------------------------------------
randoop.util.Randomness: total calls to random: 194
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 34 sequences.
components: 34
randoop.util.Randomness: total calls to random: 195
randoop.util.Randomness: total calls to random: 196
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 197
randoop.util.Randomness: total calls to random: 198
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 199
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 34 sequences.
components: 34
randoop.util.Randomness: total calls to random: 200
randoop.util.Randomness: total calls to random: 201
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 202
randoop.util.Randomness: total calls to random: 203
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=36
-------------------------------------------
randoop.util.Randomness: total calls to random: 204
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 35 sequences.
components: 35
randoop.util.Randomness: total calls to random: 205
randoop.util.Randomness: total calls to random: 206
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 207
randoop.util.Randomness: total calls to random: 208
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true

allSequences.size()=37
-------------------------------------------
randoop.util.Randomness: total calls to random: 209
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 36 sequences.
components: 36
randoop.util.Randomness: total calls to random: 210
randoop.util.Randomness: total calls to random: 211
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 212
randoop.util.Randomness: total calls to random: 213
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true

allSequences.size()=38
-------------------------------------------
randoop.util.Randomness: total calls to random: 214
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 37 sequences.
components: 37
randoop.util.Randomness: total calls to random: 215
randoop.util.Randomness: total calls to random: 216
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 217
randoop.util.Randomness: total calls to random: 218
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true

allSequences.size()=39
-------------------------------------------
randoop.util.Randomness: total calls to random: 219
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 220
randoop.util.Randomness: total calls to random: 221
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 222
randoop.util.Randomness: total calls to random: 223
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 224
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 225
randoop.util.Randomness: total calls to random: 226
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 227
randoop.util.Randomness: total calls to random: 228
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 229
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 230
randoop.util.Randomness: total calls to random: 231
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 232
randoop.util.Randomness: total calls to random: 233
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 234
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 235
randoop.util.Randomness: total calls to random: 236
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 237
randoop.util.Randomness: total calls to random: 238
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=40
-------------------------------------------
randoop.util.Randomness: total calls to random: 239
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 39 sequences.
components: 39
randoop.util.Randomness: total calls to random: 240
randoop.util.Randomness: total calls to random: 241
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 242
randoop.util.Randomness: total calls to random: 243
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=41
-------------------------------------------
randoop.util.Randomness: total calls to random: 244
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 40 sequences.
components: 40
randoop.util.Randomness: total calls to random: 245
randoop.util.Randomness: total calls to random: 246
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 247
randoop.util.Randomness: total calls to random: 248
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=42
-------------------------------------------
randoop.util.Randomness: total calls to random: 249
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 41 sequences.
components: 41
randoop.util.Randomness: total calls to random: 250
randoop.util.Randomness: total calls to random: 251
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 252
randoop.util.Randomness: total calls to random: 253
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=43
-------------------------------------------
randoop.util.Randomness: total calls to random: 254
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 42 sequences.
components: 42
randoop.util.Randomness: total calls to random: 255
randoop.util.Randomness: total calls to random: 256
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 257
randoop.util.Randomness: total calls to random: 258
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 259
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 42 sequences.
components: 42
randoop.util.Randomness: total calls to random: 260
randoop.util.Randomness: total calls to random: 261
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 262
randoop.util.Randomness: total calls to random: 263
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=44
-------------------------------------------
randoop.util.Randomness: total calls to random: 264
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 43 sequences.
components: 43
randoop.util.Randomness: total calls to random: 265
randoop.util.Randomness: total calls to random: 266
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 267
randoop.util.Randomness: total calls to random: 268
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true

allSequences.size()=45
-------------------------------------------
randoop.util.Randomness: total calls to random: 269
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 44 sequences.
components: 44
randoop.util.Randomness: total calls to random: 270
randoop.util.Randomness: total calls to random: 271
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 272
randoop.util.Randomness: total calls to random: 273
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 274
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 44 sequences.
components: 44
randoop.util.Randomness: total calls to random: 275
randoop.util.Randomness: total calls to random: 276
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 277
randoop.util.Randomness: total calls to random: 278
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=46
-------------------------------------------
randoop.util.Randomness: total calls to random: 279
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 45 sequences.
components: 45
randoop.util.Randomness: total calls to random: 280
randoop.util.Randomness: total calls to random: 281
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 282
randoop.util.Randomness: total calls to random: 283
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=47
-------------------------------------------
randoop.util.Randomness: total calls to random: 284
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 46 sequences.
components: 46
randoop.util.Randomness: total calls to random: 285
randoop.util.Randomness: total calls to random: 286
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 287
randoop.util.Randomness: total calls to random: 288
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=48
-------------------------------------------
randoop.util.Randomness: total calls to random: 289
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 47 sequences.
components: 47
randoop.util.Randomness: total calls to random: 290
randoop.util.Randomness: total calls to random: 291
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 292
randoop.util.Randomness: total calls to random: 293
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=49
-------------------------------------------
randoop.util.Randomness: total calls to random: 294
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 48 sequences.
components: 48
randoop.util.Randomness: total calls to random: 295
randoop.util.Randomness: total calls to random: 296
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 297
randoop.util.Randomness: total calls to random: 298
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true

allSequences.size()=50
-------------------------------------------
randoop.util.Randomness: total calls to random: 299
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 49 sequences.
components: 49
randoop.util.Randomness: total calls to random: 300
randoop.util.Randomness: total calls to random: 301
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 302
randoop.util.Randomness: total calls to random: 303
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=51
-------------------------------------------
randoop.util.Randomness: total calls to random: 304
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 50 sequences.
components: 50
randoop.util.Randomness: total calls to random: 305
randoop.util.Randomness: total calls to random: 306
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 307
randoop.util.Randomness: total calls to random: 308
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 309
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 50 sequences.
components: 50
randoop.util.Randomness: total calls to random: 310
randoop.util.Randomness: total calls to random: 311
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 312
randoop.util.Randomness: total calls to random: 313
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=52
-------------------------------------------
randoop.util.Randomness: total calls to random: 314
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 51 sequences.
components: 51
randoop.util.Randomness: total calls to random: 315
randoop.util.Randomness: total calls to random: 316
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 317
randoop.util.Randomness: total calls to random: 318
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=53
-------------------------------------------
randoop.util.Randomness: total calls to random: 319
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 52 sequences.
components: 52
randoop.util.Randomness: total calls to random: 320
randoop.util.Randomness: total calls to random: 321
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 322
randoop.util.Randomness: total calls to random: 323
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true

allSequences.size()=54
-------------------------------------------
randoop.util.Randomness: total calls to random: 324
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 53 sequences.
components: 53
randoop.util.Randomness: total calls to random: 325
randoop.util.Randomness: total calls to random: 326
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 327
randoop.util.Randomness: total calls to random: 328
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=55
-------------------------------------------
randoop.util.Randomness: total calls to random: 329
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 330
randoop.util.Randomness: total calls to random: 331
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 332
randoop.util.Randomness: total calls to random: 333
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true

allSequences.size()=56
-------------------------------------------
randoop.util.Randomness: total calls to random: 334
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 55 sequences.
components: 55
randoop.util.Randomness: total calls to random: 335
randoop.util.Randomness: total calls to random: 336
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 337
randoop.util.Randomness: total calls to random: 338
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=57
-------------------------------------------
randoop.util.Randomness: total calls to random: 339
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 56 sequences.
components: 56
randoop.util.Randomness: total calls to random: 340
randoop.util.Randomness: total calls to random: 341
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 342
randoop.util.Randomness: total calls to random: 343
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 344
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 56 sequences.
components: 56
randoop.util.Randomness: total calls to random: 345
randoop.util.Randomness: total calls to random: 346
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 347
randoop.util.Randomness: total calls to random: 348
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=58
-------------------------------------------
randoop.util.Randomness: total calls to random: 349
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 350
randoop.util.Randomness: total calls to random: 351
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 352
randoop.util.Randomness: total calls to random: 353
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=59
-------------------------------------------
randoop.util.Randomness: total calls to random: 354
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 58 sequences.
components: 58
randoop.util.Randomness: total calls to random: 355
randoop.util.Randomness: total calls to random: 356
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 357
randoop.util.Randomness: total calls to random: 358
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 359
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 58 sequences.
components: 58
randoop.util.Randomness: total calls to random: 360
randoop.util.Randomness: total calls to random: 361
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 362
randoop.util.Randomness: total calls to random: 363
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true

allSequences.size()=60
-------------------------------------------
randoop.util.Randomness: total calls to random: 364
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 59 sequences.
components: 59
randoop.util.Randomness: total calls to random: 365
randoop.util.Randomness: total calls to random: 366
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 367
randoop.util.Randomness: total calls to random: 368
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=61
-------------------------------------------
randoop.util.Randomness: total calls to random: 369
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 60 sequences.
components: 60
randoop.util.Randomness: total calls to random: 370
randoop.util.Randomness: total calls to random: 371
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 372
randoop.util.Randomness: total calls to random: 373
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=62
-------------------------------------------
randoop.util.Randomness: total calls to random: 374
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 61 sequences.
components: 61
randoop.util.Randomness: total calls to random: 375
randoop.util.Randomness: total calls to random: 376
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 377
randoop.util.Randomness: total calls to random: 378
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=63
-------------------------------------------
randoop.util.Randomness: total calls to random: 379
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 62 sequences.
components: 62
randoop.util.Randomness: total calls to random: 380
randoop.util.Randomness: total calls to random: 381
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 382
randoop.util.Randomness: total calls to random: 383
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=64
-------------------------------------------
randoop.util.Randomness: total calls to random: 384
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 63 sequences.
components: 63
randoop.util.Randomness: total calls to random: 385
randoop.util.Randomness: total calls to random: 386
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 387
randoop.util.Randomness: total calls to random: 388
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true

allSequences.size()=65
-------------------------------------------
randoop.util.Randomness: total calls to random: 389
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 64 sequences.
components: 64
randoop.util.Randomness: total calls to random: 390
randoop.util.Randomness: total calls to random: 391
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 392
randoop.util.Randomness: total calls to random: 393
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=66
-------------------------------------------
randoop.util.Randomness: total calls to random: 394
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 65 sequences.
components: 65
randoop.util.Randomness: total calls to random: 395
randoop.util.Randomness: total calls to random: 396
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 397
randoop.util.Randomness: total calls to random: 398
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 399
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 65 sequences.
components: 65
randoop.util.Randomness: total calls to random: 400
randoop.util.Randomness: total calls to random: 401
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 402
randoop.util.Randomness: total calls to random: 403
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=67
-------------------------------------------
randoop.util.Randomness: total calls to random: 404
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 66 sequences.
components: 66
randoop.util.Randomness: total calls to random: 405
randoop.util.Randomness: total calls to random: 406
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 407
randoop.util.Randomness: total calls to random: 408
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=68
-------------------------------------------
randoop.util.Randomness: total calls to random: 409
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 67 sequences.
components: 67
randoop.util.Randomness: total calls to random: 410
randoop.util.Randomness: total calls to random: 411
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 412
randoop.util.Randomness: total calls to random: 413
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=69
-------------------------------------------
randoop.util.Randomness: total calls to random: 414
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 68 sequences.
components: 68
randoop.util.Randomness: total calls to random: 415
randoop.util.Randomness: total calls to random: 416
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 417
randoop.util.Randomness: total calls to random: 418
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=70
-------------------------------------------
randoop.util.Randomness: total calls to random: 419
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 69 sequences.
components: 69
randoop.util.Randomness: total calls to random: 420
randoop.util.Randomness: total calls to random: 421
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 422
randoop.util.Randomness: total calls to random: 423
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 424
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 69 sequences.
components: 69
randoop.util.Randomness: total calls to random: 425
randoop.util.Randomness: total calls to random: 426
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 427
randoop.util.Randomness: total calls to random: 428
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=71
-------------------------------------------
randoop.util.Randomness: total calls to random: 429
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 70 sequences.
components: 70
randoop.util.Randomness: total calls to random: 430
randoop.util.Randomness: total calls to random: 431
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 432
randoop.util.Randomness: total calls to random: 433
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=72
-------------------------------------------
randoop.util.Randomness: total calls to random: 434
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 71 sequences.
components: 71
randoop.util.Randomness: total calls to random: 435
randoop.util.Randomness: total calls to random: 436
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 437
randoop.util.Randomness: total calls to random: 438
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=73
-------------------------------------------
randoop.util.Randomness: total calls to random: 439
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 440
randoop.util.Randomness: total calls to random: 441
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 442
randoop.util.Randomness: total calls to random: 443
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 444
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 445
randoop.util.Randomness: total calls to random: 446
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 447
randoop.util.Randomness: total calls to random: 448
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:100 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=100 [var18]  : true

allSequences.size()=74
-------------------------------------------
randoop.util.Randomness: total calls to random: 449
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 73 sequences.
components: 73
randoop.util.Randomness: total calls to random: 450
randoop.util.Randomness: total calls to random: 451
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 452
randoop.util.Randomness: total calls to random: 453
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 454
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 73 sequences.
components: 73
randoop.util.Randomness: total calls to random: 455
randoop.util.Randomness: total calls to random: 456
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 457
randoop.util.Randomness: total calls to random: 458
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=75
-------------------------------------------
randoop.util.Randomness: total calls to random: 459
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 74 sequences.
components: 74
randoop.util.Randomness: total calls to random: 460
randoop.util.Randomness: total calls to random: 461
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 462
randoop.util.Randomness: total calls to random: 463
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true

allSequences.size()=76
-------------------------------------------
randoop.util.Randomness: total calls to random: 464
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 75 sequences.
components: 75
randoop.util.Randomness: total calls to random: 465
randoop.util.Randomness: total calls to random: 466
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 467
randoop.util.Randomness: total calls to random: 468
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true

allSequences.size()=77
-------------------------------------------
randoop.util.Randomness: total calls to random: 469
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 76 sequences.
components: 76
randoop.util.Randomness: total calls to random: 470
randoop.util.Randomness: total calls to random: 471
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 472
randoop.util.Randomness: total calls to random: 473
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 474
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 76 sequences.
components: 76
randoop.util.Randomness: total calls to random: 475
randoop.util.Randomness: total calls to random: 476
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 477
randoop.util.Randomness: total calls to random: 478
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=78
-------------------------------------------
randoop.util.Randomness: total calls to random: 479
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 77 sequences.
components: 77
randoop.util.Randomness: total calls to random: 480
randoop.util.Randomness: total calls to random: 481
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 482
randoop.util.Randomness: total calls to random: 483
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 484
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 77 sequences.
components: 77
randoop.util.Randomness: total calls to random: 485
randoop.util.Randomness: total calls to random: 486
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 487
randoop.util.Randomness: total calls to random: 488
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 489
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 77 sequences.
components: 77
randoop.util.Randomness: total calls to random: 490
randoop.util.Randomness: total calls to random: 491
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 492
randoop.util.Randomness: total calls to random: 493
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=79
-------------------------------------------
randoop.util.Randomness: total calls to random: 494
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 78 sequences.
components: 78
randoop.util.Randomness: total calls to random: 495
randoop.util.Randomness: total calls to random: 496
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 497
randoop.util.Randomness: total calls to random: 498
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=80
-------------------------------------------
randoop.util.Randomness: total calls to random: 499
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 79 sequences.
components: 79
randoop.util.Randomness: total calls to random: 500
randoop.util.Randomness: total calls to random: 501
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 502
randoop.util.Randomness: total calls to random: 503
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true

allSequences.size()=81
-------------------------------------------
randoop.util.Randomness: total calls to random: 504
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 80 sequences.
components: 80
randoop.util.Randomness: total calls to random: 505
randoop.util.Randomness: total calls to random: 506
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 507
randoop.util.Randomness: total calls to random: 508
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 509
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 80 sequences.
components: 80
randoop.util.Randomness: total calls to random: 510
randoop.util.Randomness: total calls to random: 511
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 512
randoop.util.Randomness: total calls to random: 513
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=82
-------------------------------------------
randoop.util.Randomness: total calls to random: 514
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 81 sequences.
components: 81
randoop.util.Randomness: total calls to random: 515
randoop.util.Randomness: total calls to random: 516
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 517
randoop.util.Randomness: total calls to random: 518
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true

allSequences.size()=83
-------------------------------------------
randoop.util.Randomness: total calls to random: 519
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 82 sequences.
components: 82
randoop.util.Randomness: total calls to random: 520
randoop.util.Randomness: total calls to random: 521
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 522
randoop.util.Randomness: total calls to random: 523
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:-1 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=-1 [var24]  : true

allSequences.size()=84
-------------------------------------------
randoop.util.Randomness: total calls to random: 524
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 83 sequences.
components: 83
randoop.util.Randomness: total calls to random: 525
randoop.util.Randomness: total calls to random: 526
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 527
randoop.util.Randomness: total calls to random: 528
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=85
-------------------------------------------
randoop.util.Randomness: total calls to random: 529
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 84 sequences.
components: 84
randoop.util.Randomness: total calls to random: 530
randoop.util.Randomness: total calls to random: 531
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 532
randoop.util.Randomness: total calls to random: 533
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true

allSequences.size()=86
-------------------------------------------
randoop.util.Randomness: total calls to random: 534
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 85 sequences.
components: 85
randoop.util.Randomness: total calls to random: 535
randoop.util.Randomness: total calls to random: 536
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 537
randoop.util.Randomness: total calls to random: 538
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 539
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 85 sequences.
components: 85
randoop.util.Randomness: total calls to random: 540
randoop.util.Randomness: total calls to random: 541
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 542
randoop.util.Randomness: total calls to random: 543
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=87
-------------------------------------------
randoop.util.Randomness: total calls to random: 544
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 86 sequences.
components: 86
randoop.util.Randomness: total calls to random: 545
randoop.util.Randomness: total calls to random: 546
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 547
randoop.util.Randomness: total calls to random: 548
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true

allSequences.size()=88
-------------------------------------------
randoop.util.Randomness: total calls to random: 549
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 87 sequences.
components: 87
randoop.util.Randomness: total calls to random: 550
randoop.util.Randomness: total calls to random: 551
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 552
randoop.util.Randomness: total calls to random: 553
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 554
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 87 sequences.
components: 87
randoop.util.Randomness: total calls to random: 555
randoop.util.Randomness: total calls to random: 556
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 557
randoop.util.Randomness: total calls to random: 558
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true

allSequences.size()=89
-------------------------------------------
randoop.util.Randomness: total calls to random: 559
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 88 sequences.
components: 88
randoop.util.Randomness: total calls to random: 560
randoop.util.Randomness: total calls to random: 561
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 562
randoop.util.Randomness: total calls to random: 563
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true

allSequences.size()=90
-------------------------------------------
randoop.util.Randomness: total calls to random: 564
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 89 sequences.
components: 89
randoop.util.Randomness: total calls to random: 565
randoop.util.Randomness: total calls to random: 566
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 567
randoop.util.Randomness: total calls to random: 568
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 569
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 89 sequences.
components: 89
randoop.util.Randomness: total calls to random: 570
randoop.util.Randomness: total calls to random: 571
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 572
randoop.util.Randomness: total calls to random: 573
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=91
-------------------------------------------
randoop.util.Randomness: total calls to random: 574
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 90 sequences.
components: 90
randoop.util.Randomness: total calls to random: 575
randoop.util.Randomness: total calls to random: 576
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 577
randoop.util.Randomness: total calls to random: 578
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true

allSequences.size()=92
-------------------------------------------
randoop.util.Randomness: total calls to random: 579
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 91 sequences.
components: 91
randoop.util.Randomness: total calls to random: 580
randoop.util.Randomness: total calls to random: 581
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 582
randoop.util.Randomness: total calls to random: 583
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=93
-------------------------------------------
randoop.util.Randomness: total calls to random: 584
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 92 sequences.
components: 92
randoop.util.Randomness: total calls to random: 585
randoop.util.Randomness: total calls to random: 586
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 587
randoop.util.Randomness: total calls to random: 588
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 589
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 92 sequences.
components: 92
randoop.util.Randomness: total calls to random: 590
randoop.util.Randomness: total calls to random: 591
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 592
randoop.util.Randomness: total calls to random: 593
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true

allSequences.size()=94
-------------------------------------------
randoop.util.Randomness: total calls to random: 594
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 93 sequences.
components: 93
randoop.util.Randomness: total calls to random: 595
randoop.util.Randomness: total calls to random: 596
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 597
randoop.util.Randomness: total calls to random: 598
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true

allSequences.size()=95
-------------------------------------------
randoop.util.Randomness: total calls to random: 599
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 94 sequences.
components: 94
randoop.util.Randomness: total calls to random: 600
randoop.util.Randomness: total calls to random: 601
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 602
randoop.util.Randomness: total calls to random: 603
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 604
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 94 sequences.
components: 94
randoop.util.Randomness: total calls to random: 605
randoop.util.Randomness: total calls to random: 606
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 607
randoop.util.Randomness: total calls to random: 608
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 609
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 94 sequences.
components: 94
randoop.util.Randomness: total calls to random: 610
randoop.util.Randomness: total calls to random: 611
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 612
randoop.util.Randomness: total calls to random: 613
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=96
-------------------------------------------
randoop.util.Randomness: total calls to random: 614
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 95 sequences.
components: 95
randoop.util.Randomness: total calls to random: 615
randoop.util.Randomness: total calls to random: 616
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 617
randoop.util.Randomness: total calls to random: 618
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=97
-------------------------------------------
randoop.util.Randomness: total calls to random: 619
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 96 sequences.
components: 96
randoop.util.Randomness: total calls to random: 620
randoop.util.Randomness: total calls to random: 621
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 622
randoop.util.Randomness: total calls to random: 623
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=98
-------------------------------------------
randoop.util.Randomness: total calls to random: 624
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 97 sequences.
components: 97
randoop.util.Randomness: total calls to random: 625
randoop.util.Randomness: total calls to random: 626
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 627
randoop.util.Randomness: total calls to random: 628
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true

allSequences.size()=99
-------------------------------------------
randoop.util.Randomness: total calls to random: 629
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 98 sequences.
components: 98
randoop.util.Randomness: total calls to random: 630
randoop.util.Randomness: total calls to random: 631
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 632
randoop.util.Randomness: total calls to random: 633
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=100
-------------------------------------------
randoop.util.Randomness: total calls to random: 634
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 99 sequences.
components: 99
randoop.util.Randomness: total calls to random: 635
randoop.util.Randomness: total calls to random: 636
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 637
randoop.util.Randomness: total calls to random: 638
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true

allSequences.size()=101
-------------------------------------------
randoop.util.Randomness: total calls to random: 639
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 100 sequences.
components: 100
randoop.util.Randomness: total calls to random: 640
randoop.util.Randomness: total calls to random: 641
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 642
randoop.util.Randomness: total calls to random: 643
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=102
-------------------------------------------
randoop.util.Randomness: total calls to random: 644
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 101 sequences.
components: 101
randoop.util.Randomness: total calls to random: 645
randoop.util.Randomness: total calls to random: 646
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 647
randoop.util.Randomness: total calls to random: 648
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 649
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 101 sequences.
components: 101
randoop.util.Randomness: total calls to random: 650
randoop.util.Randomness: total calls to random: 651
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 652
randoop.util.Randomness: total calls to random: 653
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true

allSequences.size()=103
-------------------------------------------
randoop.util.Randomness: total calls to random: 654
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 102 sequences.
components: 102
randoop.util.Randomness: total calls to random: 655
randoop.util.Randomness: total calls to random: 656
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 657
randoop.util.Randomness: total calls to random: 658
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=104
-------------------------------------------
randoop.util.Randomness: total calls to random: 659
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 103 sequences.
components: 103
randoop.util.Randomness: total calls to random: 660
randoop.util.Randomness: total calls to random: 661
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 662
randoop.util.Randomness: total calls to random: 663
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true

allSequences.size()=105
-------------------------------------------
randoop.util.Randomness: total calls to random: 664
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 104 sequences.
components: 104
randoop.util.Randomness: total calls to random: 665
randoop.util.Randomness: total calls to random: 666
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 667
randoop.util.Randomness: total calls to random: 668
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 669
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 104 sequences.
components: 104
randoop.util.Randomness: total calls to random: 670
randoop.util.Randomness: total calls to random: 671
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 672
randoop.util.Randomness: total calls to random: 673
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true

allSequences.size()=106
-------------------------------------------
randoop.util.Randomness: total calls to random: 674
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 105 sequences.
components: 105
randoop.util.Randomness: total calls to random: 675
randoop.util.Randomness: total calls to random: 676
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 677
randoop.util.Randomness: total calls to random: 678
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 679
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 105 sequences.
components: 105
randoop.util.Randomness: total calls to random: 680
randoop.util.Randomness: total calls to random: 681
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 682
randoop.util.Randomness: total calls to random: 683
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=107
-------------------------------------------
randoop.util.Randomness: total calls to random: 684
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 106 sequences.
components: 106
randoop.util.Randomness: total calls to random: 685
randoop.util.Randomness: total calls to random: 686
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 687
randoop.util.Randomness: total calls to random: 688
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true

allSequences.size()=108
-------------------------------------------
randoop.util.Randomness: total calls to random: 689
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 107 sequences.
components: 107
randoop.util.Randomness: total calls to random: 690
randoop.util.Randomness: total calls to random: 691
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 692
randoop.util.Randomness: total calls to random: 693
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true

allSequences.size()=109
-------------------------------------------
randoop.util.Randomness: total calls to random: 694
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 108 sequences.
components: 108
randoop.util.Randomness: total calls to random: 695
randoop.util.Randomness: total calls to random: 696
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 697
randoop.util.Randomness: total calls to random: 698
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=110
-------------------------------------------
randoop.util.Randomness: total calls to random: 699
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 109 sequences.
components: 109
randoop.util.Randomness: total calls to random: 700
randoop.util.Randomness: total calls to random: 701
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 702
randoop.util.Randomness: total calls to random: 703
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 704
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 109 sequences.
components: 109
randoop.util.Randomness: total calls to random: 705
randoop.util.Randomness: total calls to random: 706
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 707
randoop.util.Randomness: total calls to random: 708
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:100 : 
var30 =  method : Carro.f(int) : var0 var29 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=100 [var30]  : true

allSequences.size()=111
-------------------------------------------
randoop.util.Randomness: total calls to random: 709
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 110 sequences.
components: 110
randoop.util.Randomness: total calls to random: 710
randoop.util.Randomness: total calls to random: 711
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 712
randoop.util.Randomness: total calls to random: 713
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=112
-------------------------------------------
randoop.util.Randomness: total calls to random: 714
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 111 sequences.
components: 111
randoop.util.Randomness: total calls to random: 715
randoop.util.Randomness: total calls to random: 716
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 717
randoop.util.Randomness: total calls to random: 718
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=10 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=113
-------------------------------------------
randoop.util.Randomness: total calls to random: 719
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 112 sequences.
components: 112
randoop.util.Randomness: total calls to random: 720
randoop.util.Randomness: total calls to random: 721
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 722
randoop.util.Randomness: total calls to random: 723
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=114
-------------------------------------------
randoop.util.Randomness: total calls to random: 724
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 113 sequences.
components: 113
randoop.util.Randomness: total calls to random: 725
randoop.util.Randomness: total calls to random: 726
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 727
randoop.util.Randomness: total calls to random: 728
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 729
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 113 sequences.
components: 113
randoop.util.Randomness: total calls to random: 730
randoop.util.Randomness: total calls to random: 731
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 732
randoop.util.Randomness: total calls to random: 733
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true

allSequences.size()=115
-------------------------------------------
randoop.util.Randomness: total calls to random: 734
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 114 sequences.
components: 114
randoop.util.Randomness: total calls to random: 735
randoop.util.Randomness: total calls to random: 736
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 737
randoop.util.Randomness: total calls to random: 738
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=116
-------------------------------------------
randoop.util.Randomness: total calls to random: 739
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 115 sequences.
components: 115
randoop.util.Randomness: total calls to random: 740
randoop.util.Randomness: total calls to random: 741
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 742
randoop.util.Randomness: total calls to random: 743
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=117
-------------------------------------------
randoop.util.Randomness: total calls to random: 744
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 116 sequences.
components: 116
randoop.util.Randomness: total calls to random: 745
randoop.util.Randomness: total calls to random: 746
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 747
randoop.util.Randomness: total calls to random: 748
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 749
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 116 sequences.
components: 116
randoop.util.Randomness: total calls to random: 750
randoop.util.Randomness: total calls to random: 751
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 752
randoop.util.Randomness: total calls to random: 753
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=118
-------------------------------------------
randoop.util.Randomness: total calls to random: 754
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 117 sequences.
components: 117
randoop.util.Randomness: total calls to random: 755
randoop.util.Randomness: total calls to random: 756
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 757
randoop.util.Randomness: total calls to random: 758
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true

allSequences.size()=119
-------------------------------------------
randoop.util.Randomness: total calls to random: 759
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 118 sequences.
components: 118
randoop.util.Randomness: total calls to random: 760
randoop.util.Randomness: total calls to random: 761
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 762
randoop.util.Randomness: total calls to random: 763
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 764
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 118 sequences.
components: 118
randoop.util.Randomness: total calls to random: 765
randoop.util.Randomness: total calls to random: 766
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 767
randoop.util.Randomness: total calls to random: 768
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=120
-------------------------------------------
randoop.util.Randomness: total calls to random: 769
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 119 sequences.
components: 119
randoop.util.Randomness: total calls to random: 770
randoop.util.Randomness: total calls to random: 771
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 772
randoop.util.Randomness: total calls to random: 773
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 774
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 119 sequences.
components: 119
randoop.util.Randomness: total calls to random: 775
randoop.util.Randomness: total calls to random: 776
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 777
randoop.util.Randomness: total calls to random: 778
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true

allSequences.size()=121
-------------------------------------------
randoop.util.Randomness: total calls to random: 779
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 120 sequences.
components: 120
randoop.util.Randomness: total calls to random: 780
randoop.util.Randomness: total calls to random: 781
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 782
randoop.util.Randomness: total calls to random: 783
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=122
-------------------------------------------
randoop.util.Randomness: total calls to random: 784
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 121 sequences.
components: 121
randoop.util.Randomness: total calls to random: 785
randoop.util.Randomness: total calls to random: 786
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 787
randoop.util.Randomness: total calls to random: 788
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:10 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=10 [var20]  : true

allSequences.size()=123
-------------------------------------------
randoop.util.Randomness: total calls to random: 789
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 122 sequences.
components: 122
randoop.util.Randomness: total calls to random: 790
randoop.util.Randomness: total calls to random: 791
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 792
randoop.util.Randomness: total calls to random: 793
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true

allSequences.size()=124
-------------------------------------------
randoop.util.Randomness: total calls to random: 794
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 123 sequences.
components: 123
randoop.util.Randomness: total calls to random: 795
randoop.util.Randomness: total calls to random: 796
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 797
randoop.util.Randomness: total calls to random: 798
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=125
-------------------------------------------
randoop.util.Randomness: total calls to random: 799
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 124 sequences.
components: 124
randoop.util.Randomness: total calls to random: 800
randoop.util.Randomness: total calls to random: 801
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 802
randoop.util.Randomness: total calls to random: 803
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=126
-------------------------------------------
randoop.util.Randomness: total calls to random: 804
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 125 sequences.
components: 125
randoop.util.Randomness: total calls to random: 805
randoop.util.Randomness: total calls to random: 806
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 807
randoop.util.Randomness: total calls to random: 808
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=10 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true

allSequences.size()=127
-------------------------------------------
randoop.util.Randomness: total calls to random: 809
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 126 sequences.
components: 126
randoop.util.Randomness: total calls to random: 810
randoop.util.Randomness: total calls to random: 811
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 812
randoop.util.Randomness: total calls to random: 813
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=128
-------------------------------------------
randoop.util.Randomness: total calls to random: 814
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 127 sequences.
components: 127
randoop.util.Randomness: total calls to random: 815
randoop.util.Randomness: total calls to random: 816
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 817
randoop.util.Randomness: total calls to random: 818
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 819
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 127 sequences.
components: 127
randoop.util.Randomness: total calls to random: 820
randoop.util.Randomness: total calls to random: 821
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 822
randoop.util.Randomness: total calls to random: 823
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 824
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 127 sequences.
components: 127
randoop.util.Randomness: total calls to random: 825
randoop.util.Randomness: total calls to random: 826
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 827
randoop.util.Randomness: total calls to random: 828
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=129
-------------------------------------------
randoop.util.Randomness: total calls to random: 829
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 128 sequences.
components: 128
randoop.util.Randomness: total calls to random: 830
randoop.util.Randomness: total calls to random: 831
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 832
randoop.util.Randomness: total calls to random: 833
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true

allSequences.size()=130
-------------------------------------------
randoop.util.Randomness: total calls to random: 834
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 129 sequences.
components: 129
randoop.util.Randomness: total calls to random: 835
randoop.util.Randomness: total calls to random: 836
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 837
randoop.util.Randomness: total calls to random: 838
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=131
-------------------------------------------
randoop.util.Randomness: total calls to random: 839
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 130 sequences.
components: 130
randoop.util.Randomness: total calls to random: 840
randoop.util.Randomness: total calls to random: 841
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 842
randoop.util.Randomness: total calls to random: 843
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=132
-------------------------------------------
randoop.util.Randomness: total calls to random: 844
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 131 sequences.
components: 131
randoop.util.Randomness: total calls to random: 845
randoop.util.Randomness: total calls to random: 846
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 847
randoop.util.Randomness: total calls to random: 848
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=133
-------------------------------------------
randoop.util.Randomness: total calls to random: 849
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 132 sequences.
components: 132
randoop.util.Randomness: total calls to random: 850
randoop.util.Randomness: total calls to random: 851
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 852
randoop.util.Randomness: total calls to random: 853
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 854
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 132 sequences.
components: 132
randoop.util.Randomness: total calls to random: 855
randoop.util.Randomness: total calls to random: 856
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 857
randoop.util.Randomness: total calls to random: 858
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=134
-------------------------------------------
randoop.util.Randomness: total calls to random: 859
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 133 sequences.
components: 133
randoop.util.Randomness: total calls to random: 860
randoop.util.Randomness: total calls to random: 861
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 862
randoop.util.Randomness: total calls to random: 863
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 864
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 133 sequences.
components: 133
randoop.util.Randomness: total calls to random: 865
randoop.util.Randomness: total calls to random: 866
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 867
randoop.util.Randomness: total calls to random: 868
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true

allSequences.size()=135
-------------------------------------------
randoop.util.Randomness: total calls to random: 869
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 134 sequences.
components: 134
randoop.util.Randomness: total calls to random: 870
randoop.util.Randomness: total calls to random: 871
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 872
randoop.util.Randomness: total calls to random: 873
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true

allSequences.size()=136
-------------------------------------------
randoop.util.Randomness: total calls to random: 874
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 135 sequences.
components: 135
randoop.util.Randomness: total calls to random: 875
randoop.util.Randomness: total calls to random: 876
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 877
randoop.util.Randomness: total calls to random: 878
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true

allSequences.size()=137
-------------------------------------------
randoop.util.Randomness: total calls to random: 879
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 136 sequences.
components: 136
randoop.util.Randomness: total calls to random: 880
randoop.util.Randomness: total calls to random: 881
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 882
randoop.util.Randomness: total calls to random: 883
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:0 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=0 [var28]  : true

allSequences.size()=138
-------------------------------------------
randoop.util.Randomness: total calls to random: 884
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 137 sequences.
components: 137
randoop.util.Randomness: total calls to random: 885
randoop.util.Randomness: total calls to random: 886
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 887
randoop.util.Randomness: total calls to random: 888
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true

allSequences.size()=139
-------------------------------------------
randoop.util.Randomness: total calls to random: 889
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 138 sequences.
components: 138
randoop.util.Randomness: total calls to random: 890
randoop.util.Randomness: total calls to random: 891
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 892
randoop.util.Randomness: total calls to random: 893
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=140
-------------------------------------------
randoop.util.Randomness: total calls to random: 894
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 139 sequences.
components: 139
randoop.util.Randomness: total calls to random: 895
randoop.util.Randomness: total calls to random: 896
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 897
randoop.util.Randomness: total calls to random: 898
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=141
-------------------------------------------
randoop.util.Randomness: total calls to random: 899
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 900
randoop.util.Randomness: total calls to random: 901
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 902
randoop.util.Randomness: total calls to random: 903
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=142
-------------------------------------------
randoop.util.Randomness: total calls to random: 904
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 141 sequences.
components: 141
randoop.util.Randomness: total calls to random: 905
randoop.util.Randomness: total calls to random: 906
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 907
randoop.util.Randomness: total calls to random: 908
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=143
-------------------------------------------
randoop.util.Randomness: total calls to random: 909
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 142 sequences.
components: 142
randoop.util.Randomness: total calls to random: 910
randoop.util.Randomness: total calls to random: 911
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 912
randoop.util.Randomness: total calls to random: 913
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=144
-------------------------------------------
randoop.util.Randomness: total calls to random: 914
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 143 sequences.
components: 143
randoop.util.Randomness: total calls to random: 915
randoop.util.Randomness: total calls to random: 916
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 917
randoop.util.Randomness: total calls to random: 918
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=145
-------------------------------------------
randoop.util.Randomness: total calls to random: 919
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 144 sequences.
components: 144
randoop.util.Randomness: total calls to random: 920
randoop.util.Randomness: total calls to random: 921
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 922
randoop.util.Randomness: total calls to random: 923
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true

allSequences.size()=146
-------------------------------------------
randoop.util.Randomness: total calls to random: 924
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 145 sequences.
components: 145
randoop.util.Randomness: total calls to random: 925
randoop.util.Randomness: total calls to random: 926
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 927
randoop.util.Randomness: total calls to random: 928
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=147
-------------------------------------------
randoop.util.Randomness: total calls to random: 929
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 146 sequences.
components: 146
randoop.util.Randomness: total calls to random: 930
randoop.util.Randomness: total calls to random: 931
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 932
randoop.util.Randomness: total calls to random: 933
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=148
-------------------------------------------
randoop.util.Randomness: total calls to random: 934
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 147 sequences.
components: 147
randoop.util.Randomness: total calls to random: 935
randoop.util.Randomness: total calls to random: 936
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 937
randoop.util.Randomness: total calls to random: 938
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=149
-------------------------------------------
randoop.util.Randomness: total calls to random: 939
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 148 sequences.
components: 148
randoop.util.Randomness: total calls to random: 940
randoop.util.Randomness: total calls to random: 941
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 942
randoop.util.Randomness: total calls to random: 943
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=150
-------------------------------------------
randoop.util.Randomness: total calls to random: 944
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 945
randoop.util.Randomness: total calls to random: 946
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 947
randoop.util.Randomness: total calls to random: 948
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 949
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 950
randoop.util.Randomness: total calls to random: 951
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 952
randoop.util.Randomness: total calls to random: 953
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 954
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 955
randoop.util.Randomness: total calls to random: 956
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 957
randoop.util.Randomness: total calls to random: 958
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=151
-------------------------------------------
randoop.util.Randomness: total calls to random: 959
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 150 sequences.
components: 150
randoop.util.Randomness: total calls to random: 960
randoop.util.Randomness: total calls to random: 961
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 962
randoop.util.Randomness: total calls to random: 963
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 964
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 150 sequences.
components: 150
randoop.util.Randomness: total calls to random: 965
randoop.util.Randomness: total calls to random: 966
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 967
randoop.util.Randomness: total calls to random: 968
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=152
-------------------------------------------
randoop.util.Randomness: total calls to random: 969
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 151 sequences.
components: 151
randoop.util.Randomness: total calls to random: 970
randoop.util.Randomness: total calls to random: 971
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 972
randoop.util.Randomness: total calls to random: 973
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:0 : 
var30 =  method : Carro.f(int) : var0 var29 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=0 [var30]  : true

allSequences.size()=153
-------------------------------------------
randoop.util.Randomness: total calls to random: 974
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 152 sequences.
components: 152
randoop.util.Randomness: total calls to random: 975
randoop.util.Randomness: total calls to random: 976
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 977
randoop.util.Randomness: total calls to random: 978
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:1 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=1 [var26]  : true

allSequences.size()=154
-------------------------------------------
randoop.util.Randomness: total calls to random: 979
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 153 sequences.
components: 153
randoop.util.Randomness: total calls to random: 980
randoop.util.Randomness: total calls to random: 981
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 982
randoop.util.Randomness: total calls to random: 983
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 984
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 153 sequences.
components: 153
randoop.util.Randomness: total calls to random: 985
randoop.util.Randomness: total calls to random: 986
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 987
randoop.util.Randomness: total calls to random: 988
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=155
-------------------------------------------
randoop.util.Randomness: total calls to random: 989
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 154 sequences.
components: 154
randoop.util.Randomness: total calls to random: 990
randoop.util.Randomness: total calls to random: 991
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 992
randoop.util.Randomness: total calls to random: 993
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Carro.f(int) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=100 [var2]  : true

allSequences.size()=156
-------------------------------------------
randoop.util.Randomness: total calls to random: 994
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 155 sequences.
components: 155
randoop.util.Randomness: total calls to random: 995
randoop.util.Randomness: total calls to random: 996
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 997
randoop.util.Randomness: total calls to random: 998
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=157
-------------------------------------------
randoop.util.Randomness: total calls to random: 999
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 156 sequences.
components: 156
randoop.util.Randomness: total calls to random: 1000
randoop.util.Randomness: total calls to random: 1001
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1002
randoop.util.Randomness: total calls to random: 1003
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=158
-------------------------------------------
randoop.util.Randomness: total calls to random: 1004
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 157 sequences.
components: 157
randoop.util.Randomness: total calls to random: 1005
randoop.util.Randomness: total calls to random: 1006
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1007
randoop.util.Randomness: total calls to random: 1008
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=159
-------------------------------------------
randoop.util.Randomness: total calls to random: 1009
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 158 sequences.
components: 158
randoop.util.Randomness: total calls to random: 1010
randoop.util.Randomness: total calls to random: 1011
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1012
randoop.util.Randomness: total calls to random: 1013
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:10 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=10 [var22]  : true

allSequences.size()=160
-------------------------------------------
randoop.util.Randomness: total calls to random: 1014
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 159 sequences.
components: 159
randoop.util.Randomness: total calls to random: 1015
randoop.util.Randomness: total calls to random: 1016
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1017
randoop.util.Randomness: total calls to random: 1018
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1019
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 159 sequences.
components: 159
randoop.util.Randomness: total calls to random: 1020
randoop.util.Randomness: total calls to random: 1021
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1022
randoop.util.Randomness: total calls to random: 1023
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=161
-------------------------------------------
randoop.util.Randomness: total calls to random: 1024
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 160 sequences.
components: 160
randoop.util.Randomness: total calls to random: 1025
randoop.util.Randomness: total calls to random: 1026
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1027
randoop.util.Randomness: total calls to random: 1028
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=162
-------------------------------------------
randoop.util.Randomness: total calls to random: 1029
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 161 sequences.
components: 161
randoop.util.Randomness: total calls to random: 1030
randoop.util.Randomness: total calls to random: 1031
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1032
randoop.util.Randomness: total calls to random: 1033
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true

allSequences.size()=163
-------------------------------------------
randoop.util.Randomness: total calls to random: 1034
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 162 sequences.
components: 162
randoop.util.Randomness: total calls to random: 1035
randoop.util.Randomness: total calls to random: 1036
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1037
randoop.util.Randomness: total calls to random: 1038
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true

allSequences.size()=164
-------------------------------------------
randoop.util.Randomness: total calls to random: 1039
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 163 sequences.
components: 163
randoop.util.Randomness: total calls to random: 1040
randoop.util.Randomness: total calls to random: 1041
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1042
randoop.util.Randomness: total calls to random: 1043
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1044
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 163 sequences.
components: 163
randoop.util.Randomness: total calls to random: 1045
randoop.util.Randomness: total calls to random: 1046
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1047
randoop.util.Randomness: total calls to random: 1048
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=165
-------------------------------------------
randoop.util.Randomness: total calls to random: 1049
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 164 sequences.
components: 164
randoop.util.Randomness: total calls to random: 1050
randoop.util.Randomness: total calls to random: 1051
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1052
randoop.util.Randomness: total calls to random: 1053
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true

allSequences.size()=166
-------------------------------------------
randoop.util.Randomness: total calls to random: 1054
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 165 sequences.
components: 165
randoop.util.Randomness: total calls to random: 1055
randoop.util.Randomness: total calls to random: 1056
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1057
randoop.util.Randomness: total calls to random: 1058
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1059
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 165 sequences.
components: 165
randoop.util.Randomness: total calls to random: 1060
randoop.util.Randomness: total calls to random: 1061
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1062
randoop.util.Randomness: total calls to random: 1063
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=167
-------------------------------------------
randoop.util.Randomness: total calls to random: 1064
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 166 sequences.
components: 166
randoop.util.Randomness: total calls to random: 1065
randoop.util.Randomness: total calls to random: 1066
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1067
randoop.util.Randomness: total calls to random: 1068
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=168
-------------------------------------------
randoop.util.Randomness: total calls to random: 1069
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 167 sequences.
components: 167
randoop.util.Randomness: total calls to random: 1070
randoop.util.Randomness: total calls to random: 1071
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1072
randoop.util.Randomness: total calls to random: 1073
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:100 : 
var30 =  method : Carro.f(int) : var0 var29 
var31 =  prim : int:100 : 
var32 =  method : Carro.f(int) : var0 var31 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Making index 31 inactive (value is a primitive)
Making index 32 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var31 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var32 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=100 [var30]  : true
<randoop.PrimValue, value=100 [var32]  : true

allSequences.size()=169
-------------------------------------------
randoop.util.Randomness: total calls to random: 1074
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 168 sequences.
components: 168
randoop.util.Randomness: total calls to random: 1075
randoop.util.Randomness: total calls to random: 1076
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1077
randoop.util.Randomness: total calls to random: 1078
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1079
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 168 sequences.
components: 168
randoop.util.Randomness: total calls to random: 1080
randoop.util.Randomness: total calls to random: 1081
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1082
randoop.util.Randomness: total calls to random: 1083
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true

allSequences.size()=170
-------------------------------------------
randoop.util.Randomness: total calls to random: 1084
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 169 sequences.
components: 169
randoop.util.Randomness: total calls to random: 1085
randoop.util.Randomness: total calls to random: 1086
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1087
randoop.util.Randomness: total calls to random: 1088
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=171
-------------------------------------------
randoop.util.Randomness: total calls to random: 1089
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 170 sequences.
components: 170
randoop.util.Randomness: total calls to random: 1090
randoop.util.Randomness: total calls to random: 1091
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1092
randoop.util.Randomness: total calls to random: 1093
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1094
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 170 sequences.
components: 170
randoop.util.Randomness: total calls to random: 1095
randoop.util.Randomness: total calls to random: 1096
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1097
randoop.util.Randomness: total calls to random: 1098
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true

allSequences.size()=172
-------------------------------------------
randoop.util.Randomness: total calls to random: 1099
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 171 sequences.
components: 171
randoop.util.Randomness: total calls to random: 1100
randoop.util.Randomness: total calls to random: 1101
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1102
randoop.util.Randomness: total calls to random: 1103
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=173
-------------------------------------------
randoop.util.Randomness: total calls to random: 1104
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 1105
randoop.util.Randomness: total calls to random: 1106
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1107
randoop.util.Randomness: total calls to random: 1108
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=174
-------------------------------------------
randoop.util.Randomness: total calls to random: 1109
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 173 sequences.
components: 173
randoop.util.Randomness: total calls to random: 1110
randoop.util.Randomness: total calls to random: 1111
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1112
randoop.util.Randomness: total calls to random: 1113
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=175
-------------------------------------------
randoop.util.Randomness: total calls to random: 1114
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 174 sequences.
components: 174
randoop.util.Randomness: total calls to random: 1115
randoop.util.Randomness: total calls to random: 1116
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1117
randoop.util.Randomness: total calls to random: 1118
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=176
-------------------------------------------
randoop.util.Randomness: total calls to random: 1119
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 175 sequences.
components: 175
randoop.util.Randomness: total calls to random: 1120
randoop.util.Randomness: total calls to random: 1121
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1122
randoop.util.Randomness: total calls to random: 1123
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=177
-------------------------------------------
randoop.util.Randomness: total calls to random: 1124
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 176 sequences.
components: 176
randoop.util.Randomness: total calls to random: 1125
randoop.util.Randomness: total calls to random: 1126
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1127
randoop.util.Randomness: total calls to random: 1128
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true

allSequences.size()=178
-------------------------------------------
randoop.util.Randomness: total calls to random: 1129
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 177 sequences.
components: 177
randoop.util.Randomness: total calls to random: 1130
randoop.util.Randomness: total calls to random: 1131
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1132
randoop.util.Randomness: total calls to random: 1133
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:100 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=100 [var18]  : true

allSequences.size()=179
-------------------------------------------
randoop.util.Randomness: total calls to random: 1134
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 178 sequences.
components: 178
randoop.util.Randomness: total calls to random: 1135
randoop.util.Randomness: total calls to random: 1136
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1137
randoop.util.Randomness: total calls to random: 1138
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=180
-------------------------------------------
randoop.util.Randomness: total calls to random: 1139
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 179 sequences.
components: 179
randoop.util.Randomness: total calls to random: 1140
randoop.util.Randomness: total calls to random: 1141
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1142
randoop.util.Randomness: total calls to random: 1143
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:-1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=-1 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true

allSequences.size()=181
-------------------------------------------
randoop.util.Randomness: total calls to random: 1144
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 180 sequences.
components: 180
randoop.util.Randomness: total calls to random: 1145
randoop.util.Randomness: total calls to random: 1146
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1147
randoop.util.Randomness: total calls to random: 1148
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=182
-------------------------------------------
randoop.util.Randomness: total calls to random: 1149
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 181 sequences.
components: 181
randoop.util.Randomness: total calls to random: 1150
randoop.util.Randomness: total calls to random: 1151
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1152
randoop.util.Randomness: total calls to random: 1153
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=183
-------------------------------------------
randoop.util.Randomness: total calls to random: 1154
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 182 sequences.
components: 182
randoop.util.Randomness: total calls to random: 1155
randoop.util.Randomness: total calls to random: 1156
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1157
randoop.util.Randomness: total calls to random: 1158
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:10 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=10 [var28]  : true

allSequences.size()=184
-------------------------------------------
randoop.util.Randomness: total calls to random: 1159
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 1160
randoop.util.Randomness: total calls to random: 1161
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1162
randoop.util.Randomness: total calls to random: 1163
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1164
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 1165
randoop.util.Randomness: total calls to random: 1166
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1167
randoop.util.Randomness: total calls to random: 1168
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1169
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 1170
randoop.util.Randomness: total calls to random: 1171
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1172
randoop.util.Randomness: total calls to random: 1173
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=185
-------------------------------------------
randoop.util.Randomness: total calls to random: 1174
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 184 sequences.
components: 184
randoop.util.Randomness: total calls to random: 1175
randoop.util.Randomness: total calls to random: 1176
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1177
randoop.util.Randomness: total calls to random: 1178
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=186
-------------------------------------------
randoop.util.Randomness: total calls to random: 1179
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 185 sequences.
components: 185
randoop.util.Randomness: total calls to random: 1180
randoop.util.Randomness: total calls to random: 1181
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1182
randoop.util.Randomness: total calls to random: 1183
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=187
-------------------------------------------
randoop.util.Randomness: total calls to random: 1184
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 186 sequences.
components: 186
randoop.util.Randomness: total calls to random: 1185
randoop.util.Randomness: total calls to random: 1186
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1187
randoop.util.Randomness: total calls to random: 1188
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=188
-------------------------------------------
randoop.util.Randomness: total calls to random: 1189
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 187 sequences.
components: 187
randoop.util.Randomness: total calls to random: 1190
randoop.util.Randomness: total calls to random: 1191
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1192
randoop.util.Randomness: total calls to random: 1193
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1194
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 187 sequences.
components: 187
randoop.util.Randomness: total calls to random: 1195
randoop.util.Randomness: total calls to random: 1196
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1197
randoop.util.Randomness: total calls to random: 1198
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=189
-------------------------------------------
randoop.util.Randomness: total calls to random: 1199
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 188 sequences.
components: 188
randoop.util.Randomness: total calls to random: 1200
randoop.util.Randomness: total calls to random: 1201
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1202
randoop.util.Randomness: total calls to random: 1203
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:0 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true
<randoop.PrimValue, value=0 [var28]  : true

allSequences.size()=190
-------------------------------------------
randoop.util.Randomness: total calls to random: 1204
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 189 sequences.
components: 189
randoop.util.Randomness: total calls to random: 1205
randoop.util.Randomness: total calls to random: 1206
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1207
randoop.util.Randomness: total calls to random: 1208
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=191
-------------------------------------------
randoop.util.Randomness: total calls to random: 1209
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 190 sequences.
components: 190
randoop.util.Randomness: total calls to random: 1210
randoop.util.Randomness: total calls to random: 1211
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1212
randoop.util.Randomness: total calls to random: 1213
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=192
-------------------------------------------
randoop.util.Randomness: total calls to random: 1214
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 191 sequences.
components: 191
randoop.util.Randomness: total calls to random: 1215
randoop.util.Randomness: total calls to random: 1216
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1217
randoop.util.Randomness: total calls to random: 1218
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true

allSequences.size()=193
-------------------------------------------
randoop.util.Randomness: total calls to random: 1219
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 192 sequences.
components: 192
randoop.util.Randomness: total calls to random: 1220
randoop.util.Randomness: total calls to random: 1221
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1222
randoop.util.Randomness: total calls to random: 1223
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=194
-------------------------------------------
randoop.util.Randomness: total calls to random: 1224
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 193 sequences.
components: 193
randoop.util.Randomness: total calls to random: 1225
randoop.util.Randomness: total calls to random: 1226
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1227
randoop.util.Randomness: total calls to random: 1228
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=195
-------------------------------------------
randoop.util.Randomness: total calls to random: 1229
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 194 sequences.
components: 194
randoop.util.Randomness: total calls to random: 1230
randoop.util.Randomness: total calls to random: 1231
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1232
randoop.util.Randomness: total calls to random: 1233
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=196
-------------------------------------------
randoop.util.Randomness: total calls to random: 1234
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 195 sequences.
components: 195
randoop.util.Randomness: total calls to random: 1235
randoop.util.Randomness: total calls to random: 1236
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1237
randoop.util.Randomness: total calls to random: 1238
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=197
-------------------------------------------
randoop.util.Randomness: total calls to random: 1239
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 196 sequences.
components: 196
randoop.util.Randomness: total calls to random: 1240
randoop.util.Randomness: total calls to random: 1241
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1242
randoop.util.Randomness: total calls to random: 1243
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=198
-------------------------------------------
randoop.util.Randomness: total calls to random: 1244
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 197 sequences.
components: 197
randoop.util.Randomness: total calls to random: 1245
randoop.util.Randomness: total calls to random: 1246
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1247
randoop.util.Randomness: total calls to random: 1248
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=199
-------------------------------------------
randoop.util.Randomness: total calls to random: 1249
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 198 sequences.
components: 198
randoop.util.Randomness: total calls to random: 1250
randoop.util.Randomness: total calls to random: 1251
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1252
randoop.util.Randomness: total calls to random: 1253
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1254
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 198 sequences.
components: 198
randoop.util.Randomness: total calls to random: 1255
randoop.util.Randomness: total calls to random: 1256
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1257
randoop.util.Randomness: total calls to random: 1258
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=200
-------------------------------------------
randoop.util.Randomness: total calls to random: 1259
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 199 sequences.
components: 199
randoop.util.Randomness: total calls to random: 1260
randoop.util.Randomness: total calls to random: 1261
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1262
randoop.util.Randomness: total calls to random: 1263
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=201
-------------------------------------------
randoop.util.Randomness: total calls to random: 1264
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 200 sequences.
components: 200
randoop.util.Randomness: total calls to random: 1265
randoop.util.Randomness: total calls to random: 1266
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1267
randoop.util.Randomness: total calls to random: 1268
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:100 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=100 [var26]  : true

allSequences.size()=202
-------------------------------------------
randoop.util.Randomness: total calls to random: 1269
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 201 sequences.
components: 201
randoop.util.Randomness: total calls to random: 1270
randoop.util.Randomness: total calls to random: 1271
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1272
randoop.util.Randomness: total calls to random: 1273
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1274
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 201 sequences.
components: 201
randoop.util.Randomness: total calls to random: 1275
randoop.util.Randomness: total calls to random: 1276
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1277
randoop.util.Randomness: total calls to random: 1278
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=203
-------------------------------------------
randoop.util.Randomness: total calls to random: 1279
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 202 sequences.
components: 202
randoop.util.Randomness: total calls to random: 1280
randoop.util.Randomness: total calls to random: 1281
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1282
randoop.util.Randomness: total calls to random: 1283
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=204
-------------------------------------------
randoop.util.Randomness: total calls to random: 1284
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 203 sequences.
components: 203
randoop.util.Randomness: total calls to random: 1285
randoop.util.Randomness: total calls to random: 1286
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1287
randoop.util.Randomness: total calls to random: 1288
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=205
-------------------------------------------
randoop.util.Randomness: total calls to random: 1289
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 204 sequences.
components: 204
randoop.util.Randomness: total calls to random: 1290
randoop.util.Randomness: total calls to random: 1291
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1292
randoop.util.Randomness: total calls to random: 1293
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=206
-------------------------------------------
randoop.util.Randomness: total calls to random: 1294
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 205 sequences.
components: 205
randoop.util.Randomness: total calls to random: 1295
randoop.util.Randomness: total calls to random: 1296
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1297
randoop.util.Randomness: total calls to random: 1298
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=207
-------------------------------------------
randoop.util.Randomness: total calls to random: 1299
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 206 sequences.
components: 206
randoop.util.Randomness: total calls to random: 1300
randoop.util.Randomness: total calls to random: 1301
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1302
randoop.util.Randomness: total calls to random: 1303
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true

allSequences.size()=208
-------------------------------------------
randoop.util.Randomness: total calls to random: 1304
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 207 sequences.
components: 207
randoop.util.Randomness: total calls to random: 1305
randoop.util.Randomness: total calls to random: 1306
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1307
randoop.util.Randomness: total calls to random: 1308
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true

allSequences.size()=209
-------------------------------------------
randoop.util.Randomness: total calls to random: 1309
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 208 sequences.
components: 208
randoop.util.Randomness: total calls to random: 1310
randoop.util.Randomness: total calls to random: 1311
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1312
randoop.util.Randomness: total calls to random: 1313
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=210
-------------------------------------------
randoop.util.Randomness: total calls to random: 1314
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 209 sequences.
components: 209
randoop.util.Randomness: total calls to random: 1315
randoop.util.Randomness: total calls to random: 1316
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1317
randoop.util.Randomness: total calls to random: 1318
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=211
-------------------------------------------
randoop.util.Randomness: total calls to random: 1319
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 210 sequences.
components: 210
randoop.util.Randomness: total calls to random: 1320
randoop.util.Randomness: total calls to random: 1321
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1322
randoop.util.Randomness: total calls to random: 1323
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1324
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 210 sequences.
components: 210
randoop.util.Randomness: total calls to random: 1325
randoop.util.Randomness: total calls to random: 1326
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1327
randoop.util.Randomness: total calls to random: 1328
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=212
-------------------------------------------
randoop.util.Randomness: total calls to random: 1329
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 211 sequences.
components: 211
randoop.util.Randomness: total calls to random: 1330
randoop.util.Randomness: total calls to random: 1331
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1332
randoop.util.Randomness: total calls to random: 1333
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true

allSequences.size()=213
-------------------------------------------
randoop.util.Randomness: total calls to random: 1334
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 212 sequences.
components: 212
randoop.util.Randomness: total calls to random: 1335
randoop.util.Randomness: total calls to random: 1336
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1337
randoop.util.Randomness: total calls to random: 1338
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true

allSequences.size()=214
-------------------------------------------
randoop.util.Randomness: total calls to random: 1339
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 213 sequences.
components: 213
randoop.util.Randomness: total calls to random: 1340
randoop.util.Randomness: total calls to random: 1341
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1342
randoop.util.Randomness: total calls to random: 1343
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=215
-------------------------------------------
randoop.util.Randomness: total calls to random: 1344
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 214 sequences.
components: 214
randoop.util.Randomness: total calls to random: 1345
randoop.util.Randomness: total calls to random: 1346
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1347
randoop.util.Randomness: total calls to random: 1348
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=216
-------------------------------------------
randoop.util.Randomness: total calls to random: 1349
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 215 sequences.
components: 215
randoop.util.Randomness: total calls to random: 1350
randoop.util.Randomness: total calls to random: 1351
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1352
randoop.util.Randomness: total calls to random: 1353
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=217
-------------------------------------------
randoop.util.Randomness: total calls to random: 1354
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 216 sequences.
components: 216
randoop.util.Randomness: total calls to random: 1355
randoop.util.Randomness: total calls to random: 1356
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1357
randoop.util.Randomness: total calls to random: 1358
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1359
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 216 sequences.
components: 216
randoop.util.Randomness: total calls to random: 1360
randoop.util.Randomness: total calls to random: 1361
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1362
randoop.util.Randomness: total calls to random: 1363
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:100 : 
var30 =  method : Carro.f(int) : var0 var29 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=100 [var30]  : true

allSequences.size()=218
-------------------------------------------
randoop.util.Randomness: total calls to random: 1364
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 217 sequences.
components: 217
randoop.util.Randomness: total calls to random: 1365
randoop.util.Randomness: total calls to random: 1366
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1367
randoop.util.Randomness: total calls to random: 1368
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true

allSequences.size()=219
-------------------------------------------
randoop.util.Randomness: total calls to random: 1369
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 218 sequences.
components: 218
randoop.util.Randomness: total calls to random: 1370
randoop.util.Randomness: total calls to random: 1371
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1372
randoop.util.Randomness: total calls to random: 1373
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=220
-------------------------------------------
randoop.util.Randomness: total calls to random: 1374
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 219 sequences.
components: 219
randoop.util.Randomness: total calls to random: 1375
randoop.util.Randomness: total calls to random: 1376
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1377
randoop.util.Randomness: total calls to random: 1378
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=221
-------------------------------------------
randoop.util.Randomness: total calls to random: 1379
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 220 sequences.
components: 220
randoop.util.Randomness: total calls to random: 1380
randoop.util.Randomness: total calls to random: 1381
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1382
randoop.util.Randomness: total calls to random: 1383
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=222
-------------------------------------------
randoop.util.Randomness: total calls to random: 1384
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 221 sequences.
components: 221
randoop.util.Randomness: total calls to random: 1385
randoop.util.Randomness: total calls to random: 1386
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1387
randoop.util.Randomness: total calls to random: 1388
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=223
-------------------------------------------
randoop.util.Randomness: total calls to random: 1389
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 222 sequences.
components: 222
randoop.util.Randomness: total calls to random: 1390
randoop.util.Randomness: total calls to random: 1391
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1392
randoop.util.Randomness: total calls to random: 1393
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=224
-------------------------------------------
randoop.util.Randomness: total calls to random: 1394
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 223 sequences.
components: 223
randoop.util.Randomness: total calls to random: 1395
randoop.util.Randomness: total calls to random: 1396
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1397
randoop.util.Randomness: total calls to random: 1398
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:100 : 
var30 =  method : Carro.f(int) : var0 var29 
var31 =  prim : int:100 : 
var32 =  method : Carro.f(int) : var0 var31 
var33 =  prim : int:1 : 
var34 =  method : Carro.f(int) : var0 var33 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Making index 31 inactive (value is a primitive)
Making index 32 inactive (value is a primitive)
Making index 33 inactive (value is a primitive)
Making index 34 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var31 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var32 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var33 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var34 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=100 [var30]  : true
<randoop.PrimValue, value=100 [var32]  : true
<randoop.PrimValue, value=1 [var34]  : true

allSequences.size()=225
-------------------------------------------
randoop.util.Randomness: total calls to random: 1399
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 224 sequences.
components: 224
randoop.util.Randomness: total calls to random: 1400
randoop.util.Randomness: total calls to random: 1401
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1402
randoop.util.Randomness: total calls to random: 1403
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true

allSequences.size()=226
-------------------------------------------
randoop.util.Randomness: total calls to random: 1404
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 225 sequences.
components: 225
randoop.util.Randomness: total calls to random: 1405
randoop.util.Randomness: total calls to random: 1406
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1407
randoop.util.Randomness: total calls to random: 1408
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true

allSequences.size()=227
-------------------------------------------
randoop.util.Randomness: total calls to random: 1409
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 226 sequences.
components: 226
randoop.util.Randomness: total calls to random: 1410
randoop.util.Randomness: total calls to random: 1411
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1412
randoop.util.Randomness: total calls to random: 1413
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1414
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 226 sequences.
components: 226
randoop.util.Randomness: total calls to random: 1415
randoop.util.Randomness: total calls to random: 1416
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1417
randoop.util.Randomness: total calls to random: 1418
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=228
-------------------------------------------
randoop.util.Randomness: total calls to random: 1419
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 227 sequences.
components: 227
randoop.util.Randomness: total calls to random: 1420
randoop.util.Randomness: total calls to random: 1421
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1422
randoop.util.Randomness: total calls to random: 1423
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=229
-------------------------------------------
randoop.util.Randomness: total calls to random: 1424
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 228 sequences.
components: 228
randoop.util.Randomness: total calls to random: 1425
randoop.util.Randomness: total calls to random: 1426
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1427
randoop.util.Randomness: total calls to random: 1428
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=230
-------------------------------------------
randoop.util.Randomness: total calls to random: 1429
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 229 sequences.
components: 229
randoop.util.Randomness: total calls to random: 1430
randoop.util.Randomness: total calls to random: 1431
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1432
randoop.util.Randomness: total calls to random: 1433
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1434
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 229 sequences.
components: 229
randoop.util.Randomness: total calls to random: 1435
randoop.util.Randomness: total calls to random: 1436
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1437
randoop.util.Randomness: total calls to random: 1438
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:-1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=-1 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true

allSequences.size()=231
-------------------------------------------
randoop.util.Randomness: total calls to random: 1439
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1440
randoop.util.Randomness: total calls to random: 1441
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1442
randoop.util.Randomness: total calls to random: 1443
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=232
-------------------------------------------
randoop.util.Randomness: total calls to random: 1444
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 231 sequences.
components: 231
randoop.util.Randomness: total calls to random: 1445
randoop.util.Randomness: total calls to random: 1446
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1447
randoop.util.Randomness: total calls to random: 1448
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=233
-------------------------------------------
randoop.util.Randomness: total calls to random: 1449
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 232 sequences.
components: 232
randoop.util.Randomness: total calls to random: 1450
randoop.util.Randomness: total calls to random: 1451
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1452
randoop.util.Randomness: total calls to random: 1453
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1454
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 232 sequences.
components: 232
randoop.util.Randomness: total calls to random: 1455
randoop.util.Randomness: total calls to random: 1456
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1457
randoop.util.Randomness: total calls to random: 1458
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=234
-------------------------------------------
randoop.util.Randomness: total calls to random: 1459
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 233 sequences.
components: 233
randoop.util.Randomness: total calls to random: 1460
randoop.util.Randomness: total calls to random: 1461
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1462
randoop.util.Randomness: total calls to random: 1463
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:10 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=10 [var22]  : true

allSequences.size()=235
-------------------------------------------
randoop.util.Randomness: total calls to random: 1464
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 234 sequences.
components: 234
randoop.util.Randomness: total calls to random: 1465
randoop.util.Randomness: total calls to random: 1466
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1467
randoop.util.Randomness: total calls to random: 1468
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=236
-------------------------------------------
randoop.util.Randomness: total calls to random: 1469
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 235 sequences.
components: 235
randoop.util.Randomness: total calls to random: 1470
randoop.util.Randomness: total calls to random: 1471
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1472
randoop.util.Randomness: total calls to random: 1473
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=237
-------------------------------------------
randoop.util.Randomness: total calls to random: 1474
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 236 sequences.
components: 236
randoop.util.Randomness: total calls to random: 1475
randoop.util.Randomness: total calls to random: 1476
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1477
randoop.util.Randomness: total calls to random: 1478
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true

allSequences.size()=238
-------------------------------------------
randoop.util.Randomness: total calls to random: 1479
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 237 sequences.
components: 237
randoop.util.Randomness: total calls to random: 1480
randoop.util.Randomness: total calls to random: 1481
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1482
randoop.util.Randomness: total calls to random: 1483
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true

allSequences.size()=239
-------------------------------------------
randoop.util.Randomness: total calls to random: 1484
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 238 sequences.
components: 238
randoop.util.Randomness: total calls to random: 1485
randoop.util.Randomness: total calls to random: 1486
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1487
randoop.util.Randomness: total calls to random: 1488
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1489
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 238 sequences.
components: 238
randoop.util.Randomness: total calls to random: 1490
randoop.util.Randomness: total calls to random: 1491
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1492
randoop.util.Randomness: total calls to random: 1493
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1494
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 238 sequences.
components: 238
randoop.util.Randomness: total calls to random: 1495
randoop.util.Randomness: total calls to random: 1496
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1497
randoop.util.Randomness: total calls to random: 1498
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=240
-------------------------------------------
randoop.util.Randomness: total calls to random: 1499
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 239 sequences.
components: 239
randoop.util.Randomness: total calls to random: 1500
randoop.util.Randomness: total calls to random: 1501
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1502
randoop.util.Randomness: total calls to random: 1503
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=241
-------------------------------------------
randoop.util.Randomness: total calls to random: 1504
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 240 sequences.
components: 240
randoop.util.Randomness: total calls to random: 1505
randoop.util.Randomness: total calls to random: 1506
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1507
randoop.util.Randomness: total calls to random: 1508
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=242
-------------------------------------------
randoop.util.Randomness: total calls to random: 1509
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 241 sequences.
components: 241
randoop.util.Randomness: total calls to random: 1510
randoop.util.Randomness: total calls to random: 1511
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1512
randoop.util.Randomness: total calls to random: 1513
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=243
-------------------------------------------
randoop.util.Randomness: total calls to random: 1514
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 242 sequences.
components: 242
randoop.util.Randomness: total calls to random: 1515
randoop.util.Randomness: total calls to random: 1516
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1517
randoop.util.Randomness: total calls to random: 1518
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:-1 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=-1 [var28]  : true

allSequences.size()=244
-------------------------------------------
randoop.util.Randomness: total calls to random: 1519
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 243 sequences.
components: 243
randoop.util.Randomness: total calls to random: 1520
randoop.util.Randomness: total calls to random: 1521
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1522
randoop.util.Randomness: total calls to random: 1523
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1524
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 243 sequences.
components: 243
randoop.util.Randomness: total calls to random: 1525
randoop.util.Randomness: total calls to random: 1526
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1527
randoop.util.Randomness: total calls to random: 1528
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:100 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=100 [var18]  : true

allSequences.size()=245
-------------------------------------------
randoop.util.Randomness: total calls to random: 1529
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 244 sequences.
components: 244
randoop.util.Randomness: total calls to random: 1530
randoop.util.Randomness: total calls to random: 1531
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1532
randoop.util.Randomness: total calls to random: 1533
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:100 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=100 [var18]  : true

allSequences.size()=246
-------------------------------------------
randoop.util.Randomness: total calls to random: 1534
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 245 sequences.
components: 245
randoop.util.Randomness: total calls to random: 1535
randoop.util.Randomness: total calls to random: 1536
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1537
randoop.util.Randomness: total calls to random: 1538
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:-1 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=-1 [var20]  : true

allSequences.size()=247
-------------------------------------------
randoop.util.Randomness: total calls to random: 1539
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 246 sequences.
components: 246
randoop.util.Randomness: total calls to random: 1540
randoop.util.Randomness: total calls to random: 1541
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1542
randoop.util.Randomness: total calls to random: 1543
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=248
-------------------------------------------
randoop.util.Randomness: total calls to random: 1544
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 247 sequences.
components: 247
randoop.util.Randomness: total calls to random: 1545
randoop.util.Randomness: total calls to random: 1546
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1547
randoop.util.Randomness: total calls to random: 1548
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1549
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 247 sequences.
components: 247
randoop.util.Randomness: total calls to random: 1550
randoop.util.Randomness: total calls to random: 1551
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1552
randoop.util.Randomness: total calls to random: 1553
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:10 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=10 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true

allSequences.size()=249
-------------------------------------------
randoop.util.Randomness: total calls to random: 1554
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 248 sequences.
components: 248
randoop.util.Randomness: total calls to random: 1555
randoop.util.Randomness: total calls to random: 1556
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1557
randoop.util.Randomness: total calls to random: 1558
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=250
-------------------------------------------
randoop.util.Randomness: total calls to random: 1559
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 249 sequences.
components: 249
randoop.util.Randomness: total calls to random: 1560
randoop.util.Randomness: total calls to random: 1561
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1562
randoop.util.Randomness: total calls to random: 1563
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1564
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 249 sequences.
components: 249
randoop.util.Randomness: total calls to random: 1565
randoop.util.Randomness: total calls to random: 1566
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1567
randoop.util.Randomness: total calls to random: 1568
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=251
-------------------------------------------
randoop.util.Randomness: total calls to random: 1569
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 250 sequences.
components: 250
randoop.util.Randomness: total calls to random: 1570
randoop.util.Randomness: total calls to random: 1571
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1572
randoop.util.Randomness: total calls to random: 1573
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true

allSequences.size()=252
-------------------------------------------
randoop.util.Randomness: total calls to random: 1574
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 251 sequences.
components: 251
randoop.util.Randomness: total calls to random: 1575
randoop.util.Randomness: total calls to random: 1576
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1577
randoop.util.Randomness: total calls to random: 1578
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true

allSequences.size()=253
-------------------------------------------
randoop.util.Randomness: total calls to random: 1579
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 252 sequences.
components: 252
randoop.util.Randomness: total calls to random: 1580
randoop.util.Randomness: total calls to random: 1581
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1582
randoop.util.Randomness: total calls to random: 1583
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1584
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 252 sequences.
components: 252
randoop.util.Randomness: total calls to random: 1585
randoop.util.Randomness: total calls to random: 1586
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1587
randoop.util.Randomness: total calls to random: 1588
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=254
-------------------------------------------
randoop.util.Randomness: total calls to random: 1589
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 253 sequences.
components: 253
randoop.util.Randomness: total calls to random: 1590
randoop.util.Randomness: total calls to random: 1591
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1592
randoop.util.Randomness: total calls to random: 1593
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1594
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 253 sequences.
components: 253
randoop.util.Randomness: total calls to random: 1595
randoop.util.Randomness: total calls to random: 1596
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1597
randoop.util.Randomness: total calls to random: 1598
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1599
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 253 sequences.
components: 253
randoop.util.Randomness: total calls to random: 1600
randoop.util.Randomness: total calls to random: 1601
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1602
randoop.util.Randomness: total calls to random: 1603
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1604
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 253 sequences.
components: 253
randoop.util.Randomness: total calls to random: 1605
randoop.util.Randomness: total calls to random: 1606
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1607
randoop.util.Randomness: total calls to random: 1608
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1609
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 253 sequences.
components: 253
randoop.util.Randomness: total calls to random: 1610
randoop.util.Randomness: total calls to random: 1611
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1612
randoop.util.Randomness: total calls to random: 1613
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=255
-------------------------------------------
randoop.util.Randomness: total calls to random: 1614
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 254 sequences.
components: 254
randoop.util.Randomness: total calls to random: 1615
randoop.util.Randomness: total calls to random: 1616
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1617
randoop.util.Randomness: total calls to random: 1618
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true

allSequences.size()=256
-------------------------------------------
randoop.util.Randomness: total calls to random: 1619
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 255 sequences.
components: 255
randoop.util.Randomness: total calls to random: 1620
randoop.util.Randomness: total calls to random: 1621
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1622
randoop.util.Randomness: total calls to random: 1623
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=257
-------------------------------------------
randoop.util.Randomness: total calls to random: 1624
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 256 sequences.
components: 256
randoop.util.Randomness: total calls to random: 1625
randoop.util.Randomness: total calls to random: 1626
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1627
randoop.util.Randomness: total calls to random: 1628
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true

allSequences.size()=258
-------------------------------------------
randoop.util.Randomness: total calls to random: 1629
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 257 sequences.
components: 257
randoop.util.Randomness: total calls to random: 1630
randoop.util.Randomness: total calls to random: 1631
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1632
randoop.util.Randomness: total calls to random: 1633
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:-1 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=-1 [var24]  : true

allSequences.size()=259
-------------------------------------------
randoop.util.Randomness: total calls to random: 1634
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 258 sequences.
components: 258
randoop.util.Randomness: total calls to random: 1635
randoop.util.Randomness: total calls to random: 1636
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1637
randoop.util.Randomness: total calls to random: 1638
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true

allSequences.size()=260
-------------------------------------------
randoop.util.Randomness: total calls to random: 1639
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 259 sequences.
components: 259
randoop.util.Randomness: total calls to random: 1640
randoop.util.Randomness: total calls to random: 1641
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1642
randoop.util.Randomness: total calls to random: 1643
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1644
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 259 sequences.
components: 259
randoop.util.Randomness: total calls to random: 1645
randoop.util.Randomness: total calls to random: 1646
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1647
randoop.util.Randomness: total calls to random: 1648
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true

allSequences.size()=261
-------------------------------------------
randoop.util.Randomness: total calls to random: 1649
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 260 sequences.
components: 260
randoop.util.Randomness: total calls to random: 1650
randoop.util.Randomness: total calls to random: 1651
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1652
randoop.util.Randomness: total calls to random: 1653
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=262
-------------------------------------------
randoop.util.Randomness: total calls to random: 1654
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 261 sequences.
components: 261
randoop.util.Randomness: total calls to random: 1655
randoop.util.Randomness: total calls to random: 1656
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1657
randoop.util.Randomness: total calls to random: 1658
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true

allSequences.size()=263
-------------------------------------------
randoop.util.Randomness: total calls to random: 1659
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 262 sequences.
components: 262
randoop.util.Randomness: total calls to random: 1660
randoop.util.Randomness: total calls to random: 1661
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1662
randoop.util.Randomness: total calls to random: 1663
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1664
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 262 sequences.
components: 262
randoop.util.Randomness: total calls to random: 1665
randoop.util.Randomness: total calls to random: 1666
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1667
randoop.util.Randomness: total calls to random: 1668
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=264
-------------------------------------------
randoop.util.Randomness: total calls to random: 1669
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 263 sequences.
components: 263
randoop.util.Randomness: total calls to random: 1670
randoop.util.Randomness: total calls to random: 1671
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1672
randoop.util.Randomness: total calls to random: 1673
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=10 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true

allSequences.size()=265
-------------------------------------------
randoop.util.Randomness: total calls to random: 1674
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 264 sequences.
components: 264
randoop.util.Randomness: total calls to random: 1675
randoop.util.Randomness: total calls to random: 1676
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1677
randoop.util.Randomness: total calls to random: 1678
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true

allSequences.size()=266
-------------------------------------------
randoop.util.Randomness: total calls to random: 1679
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 265 sequences.
components: 265
randoop.util.Randomness: total calls to random: 1680
randoop.util.Randomness: total calls to random: 1681
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1682
randoop.util.Randomness: total calls to random: 1683
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1684
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 265 sequences.
components: 265
randoop.util.Randomness: total calls to random: 1685
randoop.util.Randomness: total calls to random: 1686
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1687
randoop.util.Randomness: total calls to random: 1688
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:100 : 
var30 =  method : Carro.f(int) : var0 var29 
var31 =  prim : int:100 : 
var32 =  method : Carro.f(int) : var0 var31 
var33 =  prim : int:10 : 
var34 =  method : Carro.f(int) : var0 var33 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Making index 31 inactive (value is a primitive)
Making index 32 inactive (value is a primitive)
Making index 33 inactive (value is a primitive)
Making index 34 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var31 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var32 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var33 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var34 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=100 [var30]  : true
<randoop.PrimValue, value=100 [var32]  : true
<randoop.PrimValue, value=10 [var34]  : true

allSequences.size()=267
-------------------------------------------
randoop.util.Randomness: total calls to random: 1689
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 266 sequences.
components: 266
randoop.util.Randomness: total calls to random: 1690
randoop.util.Randomness: total calls to random: 1691
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1692
randoop.util.Randomness: total calls to random: 1693
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1694
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 266 sequences.
components: 266
randoop.util.Randomness: total calls to random: 1695
randoop.util.Randomness: total calls to random: 1696
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1697
randoop.util.Randomness: total calls to random: 1698
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=100 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=268
-------------------------------------------
randoop.util.Randomness: total calls to random: 1699
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 267 sequences.
components: 267
randoop.util.Randomness: total calls to random: 1700
randoop.util.Randomness: total calls to random: 1701
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1702
randoop.util.Randomness: total calls to random: 1703
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=269
-------------------------------------------
randoop.util.Randomness: total calls to random: 1704
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 268 sequences.
components: 268
randoop.util.Randomness: total calls to random: 1705
randoop.util.Randomness: total calls to random: 1706
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1707
randoop.util.Randomness: total calls to random: 1708
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=100 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true

allSequences.size()=270
-------------------------------------------
randoop.util.Randomness: total calls to random: 1709
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 269 sequences.
components: 269
randoop.util.Randomness: total calls to random: 1710
randoop.util.Randomness: total calls to random: 1711
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1712
randoop.util.Randomness: total calls to random: 1713
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1714
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 269 sequences.
components: 269
randoop.util.Randomness: total calls to random: 1715
randoop.util.Randomness: total calls to random: 1716
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1717
randoop.util.Randomness: total calls to random: 1718
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true

allSequences.size()=271
-------------------------------------------
randoop.util.Randomness: total calls to random: 1719
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 270 sequences.
components: 270
randoop.util.Randomness: total calls to random: 1720
randoop.util.Randomness: total calls to random: 1721
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1722
randoop.util.Randomness: total calls to random: 1723
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:10 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=10 [var22]  : true

allSequences.size()=272
-------------------------------------------
randoop.util.Randomness: total calls to random: 1724
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 271 sequences.
components: 271
randoop.util.Randomness: total calls to random: 1725
randoop.util.Randomness: total calls to random: 1726
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1727
randoop.util.Randomness: total calls to random: 1728
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1729
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 271 sequences.
components: 271
randoop.util.Randomness: total calls to random: 1730
randoop.util.Randomness: total calls to random: 1731
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1732
randoop.util.Randomness: total calls to random: 1733
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=273
-------------------------------------------
randoop.util.Randomness: total calls to random: 1734
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 272 sequences.
components: 272
randoop.util.Randomness: total calls to random: 1735
randoop.util.Randomness: total calls to random: 1736
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1737
randoop.util.Randomness: total calls to random: 1738
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=274
-------------------------------------------
randoop.util.Randomness: total calls to random: 1739
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 273 sequences.
components: 273
randoop.util.Randomness: total calls to random: 1740
randoop.util.Randomness: total calls to random: 1741
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1742
randoop.util.Randomness: total calls to random: 1743
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true

allSequences.size()=275
-------------------------------------------
randoop.util.Randomness: total calls to random: 1744
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 274 sequences.
components: 274
randoop.util.Randomness: total calls to random: 1745
randoop.util.Randomness: total calls to random: 1746
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1747
randoop.util.Randomness: total calls to random: 1748
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true

allSequences.size()=276
-------------------------------------------
randoop.util.Randomness: total calls to random: 1749
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 275 sequences.
components: 275
randoop.util.Randomness: total calls to random: 1750
randoop.util.Randomness: total calls to random: 1751
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1752
randoop.util.Randomness: total calls to random: 1753
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1754
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 275 sequences.
components: 275
randoop.util.Randomness: total calls to random: 1755
randoop.util.Randomness: total calls to random: 1756
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1757
randoop.util.Randomness: total calls to random: 1758
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=277
-------------------------------------------
randoop.util.Randomness: total calls to random: 1759
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 276 sequences.
components: 276
randoop.util.Randomness: total calls to random: 1760
randoop.util.Randomness: total calls to random: 1761
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1762
randoop.util.Randomness: total calls to random: 1763
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=278
-------------------------------------------
randoop.util.Randomness: total calls to random: 1764
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 277 sequences.
components: 277
randoop.util.Randomness: total calls to random: 1765
randoop.util.Randomness: total calls to random: 1766
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1767
randoop.util.Randomness: total calls to random: 1768
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=279
-------------------------------------------
randoop.util.Randomness: total calls to random: 1769
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 278 sequences.
components: 278
randoop.util.Randomness: total calls to random: 1770
randoop.util.Randomness: total calls to random: 1771
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1772
randoop.util.Randomness: total calls to random: 1773
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:10 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=10 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=280
-------------------------------------------
randoop.util.Randomness: total calls to random: 1774
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 279 sequences.
components: 279
randoop.util.Randomness: total calls to random: 1775
randoop.util.Randomness: total calls to random: 1776
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1777
randoop.util.Randomness: total calls to random: 1778
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1779
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 279 sequences.
components: 279
randoop.util.Randomness: total calls to random: 1780
randoop.util.Randomness: total calls to random: 1781
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1782
randoop.util.Randomness: total calls to random: 1783
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=281
-------------------------------------------
randoop.util.Randomness: total calls to random: 1784
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 280 sequences.
components: 280
randoop.util.Randomness: total calls to random: 1785
randoop.util.Randomness: total calls to random: 1786
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1787
randoop.util.Randomness: total calls to random: 1788
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=282
-------------------------------------------
randoop.util.Randomness: total calls to random: 1789
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 281 sequences.
components: 281
randoop.util.Randomness: total calls to random: 1790
randoop.util.Randomness: total calls to random: 1791
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1792
randoop.util.Randomness: total calls to random: 1793
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:-1 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:0 : 
var30 =  method : Carro.f(int) : var0 var29 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=-1 [var28]  : true
<randoop.PrimValue, value=0 [var30]  : true

allSequences.size()=283
-------------------------------------------
randoop.util.Randomness: total calls to random: 1794
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 282 sequences.
components: 282
randoop.util.Randomness: total calls to random: 1795
randoop.util.Randomness: total calls to random: 1796
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1797
randoop.util.Randomness: total calls to random: 1798
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true

allSequences.size()=284
-------------------------------------------
randoop.util.Randomness: total calls to random: 1799
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1800
randoop.util.Randomness: total calls to random: 1801
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1802
randoop.util.Randomness: total calls to random: 1803
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1804
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1805
randoop.util.Randomness: total calls to random: 1806
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1807
randoop.util.Randomness: total calls to random: 1808
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1809
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1810
randoop.util.Randomness: total calls to random: 1811
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1812
randoop.util.Randomness: total calls to random: 1813
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1814
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1815
randoop.util.Randomness: total calls to random: 1816
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1817
randoop.util.Randomness: total calls to random: 1818
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1819
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1820
randoop.util.Randomness: total calls to random: 1821
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1822
randoop.util.Randomness: total calls to random: 1823
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1824
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1825
randoop.util.Randomness: total calls to random: 1826
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1827
randoop.util.Randomness: total calls to random: 1828
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=285
-------------------------------------------
randoop.util.Randomness: total calls to random: 1829
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 284 sequences.
components: 284
randoop.util.Randomness: total calls to random: 1830
randoop.util.Randomness: total calls to random: 1831
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1832
randoop.util.Randomness: total calls to random: 1833
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true

allSequences.size()=286
-------------------------------------------
randoop.util.Randomness: total calls to random: 1834
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 285 sequences.
components: 285
randoop.util.Randomness: total calls to random: 1835
randoop.util.Randomness: total calls to random: 1836
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1837
randoop.util.Randomness: total calls to random: 1838
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=287
-------------------------------------------
randoop.util.Randomness: total calls to random: 1839
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 286 sequences.
components: 286
randoop.util.Randomness: total calls to random: 1840
randoop.util.Randomness: total calls to random: 1841
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1842
randoop.util.Randomness: total calls to random: 1843
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1844
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 286 sequences.
components: 286
randoop.util.Randomness: total calls to random: 1845
randoop.util.Randomness: total calls to random: 1846
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1847
randoop.util.Randomness: total calls to random: 1848
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=288
-------------------------------------------
randoop.util.Randomness: total calls to random: 1849
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 287 sequences.
components: 287
randoop.util.Randomness: total calls to random: 1850
randoop.util.Randomness: total calls to random: 1851
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1852
randoop.util.Randomness: total calls to random: 1853
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1854
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 287 sequences.
components: 287
randoop.util.Randomness: total calls to random: 1855
randoop.util.Randomness: total calls to random: 1856
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1857
randoop.util.Randomness: total calls to random: 1858
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:-1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=-1 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true

allSequences.size()=289
-------------------------------------------
randoop.util.Randomness: total calls to random: 1859
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1860
randoop.util.Randomness: total calls to random: 1861
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1862
randoop.util.Randomness: total calls to random: 1863
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true

allSequences.size()=290
-------------------------------------------
randoop.util.Randomness: total calls to random: 1864
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 289 sequences.
components: 289
randoop.util.Randomness: total calls to random: 1865
randoop.util.Randomness: total calls to random: 1866
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1867
randoop.util.Randomness: total calls to random: 1868
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:100 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=100 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=291
-------------------------------------------
randoop.util.Randomness: total calls to random: 1869
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 290 sequences.
components: 290
randoop.util.Randomness: total calls to random: 1870
randoop.util.Randomness: total calls to random: 1871
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1872
randoop.util.Randomness: total calls to random: 1873
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true

allSequences.size()=292
-------------------------------------------
randoop.util.Randomness: total calls to random: 1874
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 291 sequences.
components: 291
randoop.util.Randomness: total calls to random: 1875
randoop.util.Randomness: total calls to random: 1876
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1877
randoop.util.Randomness: total calls to random: 1878
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true

allSequences.size()=293
-------------------------------------------
randoop.util.Randomness: total calls to random: 1879
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 292 sequences.
components: 292
randoop.util.Randomness: total calls to random: 1880
randoop.util.Randomness: total calls to random: 1881
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1882
randoop.util.Randomness: total calls to random: 1883
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=294
-------------------------------------------
randoop.util.Randomness: total calls to random: 1884
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 293 sequences.
components: 293
randoop.util.Randomness: total calls to random: 1885
randoop.util.Randomness: total calls to random: 1886
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1887
randoop.util.Randomness: total calls to random: 1888
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1889
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 293 sequences.
components: 293
randoop.util.Randomness: total calls to random: 1890
randoop.util.Randomness: total calls to random: 1891
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1892
randoop.util.Randomness: total calls to random: 1893
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true

allSequences.size()=295
-------------------------------------------
randoop.util.Randomness: total calls to random: 1894
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 294 sequences.
components: 294
randoop.util.Randomness: total calls to random: 1895
randoop.util.Randomness: total calls to random: 1896
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1897
randoop.util.Randomness: total calls to random: 1898
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true

allSequences.size()=296
-------------------------------------------
randoop.util.Randomness: total calls to random: 1899
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 295 sequences.
components: 295
randoop.util.Randomness: total calls to random: 1900
randoop.util.Randomness: total calls to random: 1901
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1902
randoop.util.Randomness: total calls to random: 1903
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:0 : 
var30 =  method : Carro.f(int) : var0 var29 
var31 =  prim : int:100 : 
var32 =  method : Carro.f(int) : var0 var31 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Making index 31 inactive (value is a primitive)
Making index 32 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var31 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var32 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=0 [var30]  : true
<randoop.PrimValue, value=100 [var32]  : true

allSequences.size()=297
-------------------------------------------
randoop.util.Randomness: total calls to random: 1904
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 296 sequences.
components: 296
randoop.util.Randomness: total calls to random: 1905
randoop.util.Randomness: total calls to random: 1906
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1907
randoop.util.Randomness: total calls to random: 1908
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:-1 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=1 [var26]  : true
<randoop.PrimValue, value=-1 [var28]  : true

allSequences.size()=298
-------------------------------------------
randoop.util.Randomness: total calls to random: 1909
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 297 sequences.
components: 297
randoop.util.Randomness: total calls to random: 1910
randoop.util.Randomness: total calls to random: 1911
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1912
randoop.util.Randomness: total calls to random: 1913
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true

allSequences.size()=299
-------------------------------------------
randoop.util.Randomness: total calls to random: 1914
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 298 sequences.
components: 298
randoop.util.Randomness: total calls to random: 1915
randoop.util.Randomness: total calls to random: 1916
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1917
randoop.util.Randomness: total calls to random: 1918
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=300
-------------------------------------------
randoop.util.Randomness: total calls to random: 1919
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 299 sequences.
components: 299
randoop.util.Randomness: total calls to random: 1920
randoop.util.Randomness: total calls to random: 1921
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1922
randoop.util.Randomness: total calls to random: 1923
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=301
-------------------------------------------
randoop.util.Randomness: total calls to random: 1924
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 300 sequences.
components: 300
randoop.util.Randomness: total calls to random: 1925
randoop.util.Randomness: total calls to random: 1926
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1927
randoop.util.Randomness: total calls to random: 1928
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1929
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 300 sequences.
components: 300
randoop.util.Randomness: total calls to random: 1930
randoop.util.Randomness: total calls to random: 1931
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1932
randoop.util.Randomness: total calls to random: 1933
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=302
-------------------------------------------
randoop.util.Randomness: total calls to random: 1934
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 301 sequences.
components: 301
randoop.util.Randomness: total calls to random: 1935
randoop.util.Randomness: total calls to random: 1936
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1937
randoop.util.Randomness: total calls to random: 1938
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true

allSequences.size()=303
-------------------------------------------
randoop.util.Randomness: total calls to random: 1939
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 302 sequences.
components: 302
randoop.util.Randomness: total calls to random: 1940
randoop.util.Randomness: total calls to random: 1941
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1942
randoop.util.Randomness: total calls to random: 1943
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=304
-------------------------------------------
randoop.util.Randomness: total calls to random: 1944
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 303 sequences.
components: 303
randoop.util.Randomness: total calls to random: 1945
randoop.util.Randomness: total calls to random: 1946
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1947
randoop.util.Randomness: total calls to random: 1948
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:-1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=-1 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true

allSequences.size()=305
-------------------------------------------
randoop.util.Randomness: total calls to random: 1949
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 304 sequences.
components: 304
randoop.util.Randomness: total calls to random: 1950
randoop.util.Randomness: total calls to random: 1951
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1952
randoop.util.Randomness: total calls to random: 1953
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true

allSequences.size()=306
-------------------------------------------
randoop.util.Randomness: total calls to random: 1954
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 305 sequences.
components: 305
randoop.util.Randomness: total calls to random: 1955
randoop.util.Randomness: total calls to random: 1956
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1957
randoop.util.Randomness: total calls to random: 1958
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1959
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 305 sequences.
components: 305
randoop.util.Randomness: total calls to random: 1960
randoop.util.Randomness: total calls to random: 1961
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1962
randoop.util.Randomness: total calls to random: 1963
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:10 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=10 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true

allSequences.size()=307
-------------------------------------------
randoop.util.Randomness: total calls to random: 1964
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 306 sequences.
components: 306
randoop.util.Randomness: total calls to random: 1965
randoop.util.Randomness: total calls to random: 1966
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1967
randoop.util.Randomness: total calls to random: 1968
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=308
-------------------------------------------
randoop.util.Randomness: total calls to random: 1969
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 307 sequences.
components: 307
randoop.util.Randomness: total calls to random: 1970
randoop.util.Randomness: total calls to random: 1971
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1972
randoop.util.Randomness: total calls to random: 1973
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true

allSequences.size()=309
-------------------------------------------
randoop.util.Randomness: total calls to random: 1974
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 308 sequences.
components: 308
randoop.util.Randomness: total calls to random: 1975
randoop.util.Randomness: total calls to random: 1976
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1977
randoop.util.Randomness: total calls to random: 1978
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:1 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:-1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:-1 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:10 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=1 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=-1 [var24]  : true
<randoop.PrimValue, value=-1 [var26]  : true
<randoop.PrimValue, value=10 [var28]  : true

allSequences.size()=310
-------------------------------------------
randoop.util.Randomness: total calls to random: 1979
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 309 sequences.
components: 309
randoop.util.Randomness: total calls to random: 1980
randoop.util.Randomness: total calls to random: 1981
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1982
randoop.util.Randomness: total calls to random: 1983
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true

allSequences.size()=311
-------------------------------------------
randoop.util.Randomness: total calls to random: 1984
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 310 sequences.
components: 310
randoop.util.Randomness: total calls to random: 1985
randoop.util.Randomness: total calls to random: 1986
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1987
randoop.util.Randomness: total calls to random: 1988
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true

allSequences.size()=312
-------------------------------------------
randoop.util.Randomness: total calls to random: 1989
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 311 sequences.
components: 311
randoop.util.Randomness: total calls to random: 1990
randoop.util.Randomness: total calls to random: 1991
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1992
randoop.util.Randomness: total calls to random: 1993
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:1 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true
<randoop.PrimValue, value=1 [var26]  : true

allSequences.size()=313
-------------------------------------------
randoop.util.Randomness: total calls to random: 1994
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 312 sequences.
components: 312
randoop.util.Randomness: total calls to random: 1995
randoop.util.Randomness: total calls to random: 1996
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1997
randoop.util.Randomness: total calls to random: 1998
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=314
-------------------------------------------
randoop.util.Randomness: total calls to random: 1999
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 313 sequences.
components: 313
randoop.util.Randomness: total calls to random: 2000
randoop.util.Randomness: total calls to random: 2001
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2002
randoop.util.Randomness: total calls to random: 2003
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2004
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 313 sequences.
components: 313
randoop.util.Randomness: total calls to random: 2005
randoop.util.Randomness: total calls to random: 2006
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2007
randoop.util.Randomness: total calls to random: 2008
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=315
-------------------------------------------
randoop.util.Randomness: total calls to random: 2009
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 314 sequences.
components: 314
randoop.util.Randomness: total calls to random: 2010
randoop.util.Randomness: total calls to random: 2011
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2012
randoop.util.Randomness: total calls to random: 2013
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:-1 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true
<randoop.PrimValue, value=-1 [var28]  : true

allSequences.size()=316
-------------------------------------------
randoop.util.Randomness: total calls to random: 2014
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 315 sequences.
components: 315
randoop.util.Randomness: total calls to random: 2015
randoop.util.Randomness: total calls to random: 2016
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2017
randoop.util.Randomness: total calls to random: 2018
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:-1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=-1 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=317
-------------------------------------------
randoop.util.Randomness: total calls to random: 2019
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 316 sequences.
components: 316
randoop.util.Randomness: total calls to random: 2020
randoop.util.Randomness: total calls to random: 2021
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2022
randoop.util.Randomness: total calls to random: 2023
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2024
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 316 sequences.
components: 316
randoop.util.Randomness: total calls to random: 2025
randoop.util.Randomness: total calls to random: 2026
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2027
randoop.util.Randomness: total calls to random: 2028
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:10 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=10 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=318
-------------------------------------------
randoop.util.Randomness: total calls to random: 2029
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 317 sequences.
components: 317
randoop.util.Randomness: total calls to random: 2030
randoop.util.Randomness: total calls to random: 2031
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2032
randoop.util.Randomness: total calls to random: 2033
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true

allSequences.size()=319
-------------------------------------------
randoop.util.Randomness: total calls to random: 2034
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 318 sequences.
components: 318
randoop.util.Randomness: total calls to random: 2035
randoop.util.Randomness: total calls to random: 2036
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2037
randoop.util.Randomness: total calls to random: 2038
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2039
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 318 sequences.
components: 318
randoop.util.Randomness: total calls to random: 2040
randoop.util.Randomness: total calls to random: 2041
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2042
randoop.util.Randomness: total calls to random: 2043
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2044
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 318 sequences.
components: 318
randoop.util.Randomness: total calls to random: 2045
randoop.util.Randomness: total calls to random: 2046
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2047
randoop.util.Randomness: total calls to random: 2048
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:-1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=-1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=320
-------------------------------------------
randoop.util.Randomness: total calls to random: 2049
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 319 sequences.
components: 319
randoop.util.Randomness: total calls to random: 2050
randoop.util.Randomness: total calls to random: 2051
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2052
randoop.util.Randomness: total calls to random: 2053
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true

allSequences.size()=321
-------------------------------------------
randoop.util.Randomness: total calls to random: 2054
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 320 sequences.
components: 320
randoop.util.Randomness: total calls to random: 2055
randoop.util.Randomness: total calls to random: 2056
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2057
randoop.util.Randomness: total calls to random: 2058
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2059
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 320 sequences.
components: 320
randoop.util.Randomness: total calls to random: 2060
randoop.util.Randomness: total calls to random: 2061
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2062
randoop.util.Randomness: total calls to random: 2063
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true

allSequences.size()=322
-------------------------------------------
randoop.util.Randomness: total calls to random: 2064
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 321 sequences.
components: 321
randoop.util.Randomness: total calls to random: 2065
randoop.util.Randomness: total calls to random: 2066
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2067
randoop.util.Randomness: total calls to random: 2068
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=323
-------------------------------------------
randoop.util.Randomness: total calls to random: 2069
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 322 sequences.
components: 322
randoop.util.Randomness: total calls to random: 2070
randoop.util.Randomness: total calls to random: 2071
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2072
randoop.util.Randomness: total calls to random: 2073
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2074
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 322 sequences.
components: 322
randoop.util.Randomness: total calls to random: 2075
randoop.util.Randomness: total calls to random: 2076
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2077
randoop.util.Randomness: total calls to random: 2078
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=324
-------------------------------------------
randoop.util.Randomness: total calls to random: 2079
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 323 sequences.
components: 323
randoop.util.Randomness: total calls to random: 2080
randoop.util.Randomness: total calls to random: 2081
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2082
randoop.util.Randomness: total calls to random: 2083
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:0 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:0 : 
var22 =  method : Carro.f(int) : var0 var21 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=0 [var22]  : true

allSequences.size()=325
-------------------------------------------
randoop.util.Randomness: total calls to random: 2084
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 324 sequences.
components: 324
randoop.util.Randomness: total calls to random: 2085
randoop.util.Randomness: total calls to random: 2086
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2087
randoop.util.Randomness: total calls to random: 2088
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true

allSequences.size()=326
-------------------------------------------
randoop.util.Randomness: total calls to random: 2089
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 325 sequences.
components: 325
randoop.util.Randomness: total calls to random: 2090
randoop.util.Randomness: total calls to random: 2091
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2092
randoop.util.Randomness: total calls to random: 2093
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=327
-------------------------------------------
randoop.util.Randomness: total calls to random: 2094
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 326 sequences.
components: 326
randoop.util.Randomness: total calls to random: 2095
randoop.util.Randomness: total calls to random: 2096
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2097
randoop.util.Randomness: total calls to random: 2098
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=328
-------------------------------------------
randoop.util.Randomness: total calls to random: 2099
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 327 sequences.
components: 327
randoop.util.Randomness: total calls to random: 2100
randoop.util.Randomness: total calls to random: 2101
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2102
randoop.util.Randomness: total calls to random: 2103
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:0 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:-1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:10 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:100 : 
var26 =  method : Carro.f(int) : var0 var25 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true
<randoop.PrimValue, value=-1 [var22]  : true
<randoop.PrimValue, value=10 [var24]  : true
<randoop.PrimValue, value=100 [var26]  : true

allSequences.size()=329
-------------------------------------------
randoop.util.Randomness: total calls to random: 2104
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 328 sequences.
components: 328
randoop.util.Randomness: total calls to random: 2105
randoop.util.Randomness: total calls to random: 2106
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2107
randoop.util.Randomness: total calls to random: 2108
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=330
-------------------------------------------
randoop.util.Randomness: total calls to random: 2109
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 329 sequences.
components: 329
randoop.util.Randomness: total calls to random: 2110
randoop.util.Randomness: total calls to random: 2111
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2112
randoop.util.Randomness: total calls to random: 2113
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:0 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:10 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true
<randoop.PrimValue, value=0 [var26]  : true
<randoop.PrimValue, value=10 [var28]  : true

allSequences.size()=331
-------------------------------------------
randoop.util.Randomness: total calls to random: 2114
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 330 sequences.
components: 330
randoop.util.Randomness: total calls to random: 2115
randoop.util.Randomness: total calls to random: 2116
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2117
randoop.util.Randomness: total calls to random: 2118
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:-1 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:100 : 
var30 =  method : Carro.f(int) : var0 var29 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=-1 [var28]  : true
<randoop.PrimValue, value=100 [var30]  : true

allSequences.size()=332
-------------------------------------------
randoop.util.Randomness: total calls to random: 2119
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 331 sequences.
components: 331
randoop.util.Randomness: total calls to random: 2120
randoop.util.Randomness: total calls to random: 2121
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2122
randoop.util.Randomness: total calls to random: 2123
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:1 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true

allSequences.size()=333
-------------------------------------------
randoop.util.Randomness: total calls to random: 2124
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 332 sequences.
components: 332
randoop.util.Randomness: total calls to random: 2125
randoop.util.Randomness: total calls to random: 2126
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2127
randoop.util.Randomness: total calls to random: 2128
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:0 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=334
-------------------------------------------
randoop.util.Randomness: total calls to random: 2129
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 333 sequences.
components: 333
randoop.util.Randomness: total calls to random: 2130
randoop.util.Randomness: total calls to random: 2131
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2132
randoop.util.Randomness: total calls to random: 2133
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:-1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:0 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:100 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:-1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:-1 : 
var18 =  method : Carro.f(int) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=-1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=100 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=-1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=-1 [var18]  : true

allSequences.size()=335
-------------------------------------------
randoop.util.Randomness: total calls to random: 2134
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 334 sequences.
components: 334
randoop.util.Randomness: total calls to random: 2135
randoop.util.Randomness: total calls to random: 2136
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2137
randoop.util.Randomness: total calls to random: 2138
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:10 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:-1 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=10 [var14]  : true
<randoop.PrimValue, value=-1 [var16]  : true

allSequences.size()=336
-------------------------------------------
randoop.util.Randomness: total calls to random: 2139
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 335 sequences.
components: 335
randoop.util.Randomness: total calls to random: 2140
randoop.util.Randomness: total calls to random: 2141
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2142
randoop.util.Randomness: total calls to random: 2143
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:10 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:100 : 
var16 =  method : Carro.f(int) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true
<randoop.PrimValue, value=10 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=100 [var16]  : true

allSequences.size()=337
-------------------------------------------
randoop.util.Randomness: total calls to random: 2144
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 336 sequences.
components: 336
randoop.util.Randomness: total calls to random: 2145
randoop.util.Randomness: total calls to random: 2146
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2147
randoop.util.Randomness: total calls to random: 2148
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:1 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=338
-------------------------------------------
randoop.util.Randomness: total calls to random: 2149
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 337 sequences.
components: 337
randoop.util.Randomness: total calls to random: 2150
randoop.util.Randomness: total calls to random: 2151
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2152
randoop.util.Randomness: total calls to random: 2153
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:-1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:-1 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:1 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:10 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:10 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:10 : 
var20 =  method : Carro.f(int) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=-1 [var10]  : true
<randoop.PrimValue, value=-1 [var12]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=10 [var16]  : true
<randoop.PrimValue, value=10 [var18]  : true
<randoop.PrimValue, value=10 [var20]  : true

allSequences.size()=339
-------------------------------------------
randoop.util.Randomness: total calls to random: 2154
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 338 sequences.
components: 338
randoop.util.Randomness: total calls to random: 2155
randoop.util.Randomness: total calls to random: 2156
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2157
randoop.util.Randomness: total calls to random: 2158
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:-1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:10 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f((-1));
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=-1 [var6]  : true
<randoop.PrimValue, value=10 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=340
-------------------------------------------
randoop.util.Randomness: total calls to random: 2159
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 339 sequences.
components: 339
randoop.util.Randomness: total calls to random: 2160
randoop.util.Randomness: total calls to random: 2161
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2162
randoop.util.Randomness: total calls to random: 2163
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:100 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:100 : 
var10 =  method : Carro.f(int) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=100 [var8]  : true
<randoop.PrimValue, value=100 [var10]  : true

allSequences.size()=341
-------------------------------------------
randoop.util.Randomness: total calls to random: 2164
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 340 sequences.
components: 340
randoop.util.Randomness: total calls to random: 2165
randoop.util.Randomness: total calls to random: 2166
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2167
randoop.util.Randomness: total calls to random: 2168
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=342
-------------------------------------------
randoop.util.Randomness: total calls to random: 2169
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 341 sequences.
components: 341
randoop.util.Randomness: total calls to random: 2170
randoop.util.Randomness: total calls to random: 2171
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2172
randoop.util.Randomness: total calls to random: 2173
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2174
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 341 sequences.
components: 341
randoop.util.Randomness: total calls to random: 2175
randoop.util.Randomness: total calls to random: 2176
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2177
randoop.util.Randomness: total calls to random: 2178
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:100 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:10 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:10 : 
var30 =  method : Carro.f(int) : var0 var29 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=100 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=10 [var28]  : true
<randoop.PrimValue, value=10 [var30]  : true

allSequences.size()=343
-------------------------------------------
randoop.util.Randomness: total calls to random: 2179
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 342 sequences.
components: 342
randoop.util.Randomness: total calls to random: 2180
randoop.util.Randomness: total calls to random: 2181
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2182
randoop.util.Randomness: total calls to random: 2183
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2184
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 342 sequences.
components: 342
randoop.util.Randomness: total calls to random: 2185
randoop.util.Randomness: total calls to random: 2186
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2187
randoop.util.Randomness: total calls to random: 2188
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2189
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 342 sequences.
components: 342
randoop.util.Randomness: total calls to random: 2190
randoop.util.Randomness: total calls to random: 2191
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2192
randoop.util.Randomness: total calls to random: 2193
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:100 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:0 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:0 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:1 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:0 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:100 : 
var14 =  method : Carro.f(int) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=100 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=100 [var14]  : true

allSequences.size()=344
-------------------------------------------
randoop.util.Randomness: total calls to random: 2194
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 343 sequences.
components: 343
randoop.util.Randomness: total calls to random: 2195
randoop.util.Randomness: total calls to random: 2196
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2197
randoop.util.Randomness: total calls to random: 2198
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:100 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:1 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=100 [var22]  : true
<randoop.PrimValue, value=1 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true

allSequences.size()=345
-------------------------------------------
randoop.util.Randomness: total calls to random: 2199
Selected statement: Carro.f(int)
Will query component set for objects of typeclass Carro
getActivesequencesThatYield: entering method, clazz=class Carro
getActivesequencesThatYield: returning 344 sequences.
components: 344
randoop.util.Randomness: total calls to random: 2200
randoop.util.Randomness: total calls to random: 2201
Will query component set for objects of typeint
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 2202
randoop.util.Randomness: total calls to random: 2203
Successfully created new unique sequence:var0 =  cons : Carro.<init>() : 
var1 =  prim : int:10 : 
var2 =  method : Carro.f(int) : var0 var1 
var3 =  prim : int:1 : 
var4 =  method : Carro.f(int) : var0 var3 
var5 =  prim : int:1 : 
var6 =  method : Carro.f(int) : var0 var5 
var7 =  prim : int:1 : 
var8 =  method : Carro.f(int) : var0 var7 
var9 =  prim : int:10 : 
var10 =  method : Carro.f(int) : var0 var9 
var11 =  prim : int:100 : 
var12 =  method : Carro.f(int) : var0 var11 
var13 =  prim : int:0 : 
var14 =  method : Carro.f(int) : var0 var13 
var15 =  prim : int:0 : 
var16 =  method : Carro.f(int) : var0 var15 
var17 =  prim : int:1 : 
var18 =  method : Carro.f(int) : var0 var17 
var19 =  prim : int:100 : 
var20 =  method : Carro.f(int) : var0 var19 
var21 =  prim : int:1 : 
var22 =  method : Carro.f(int) : var0 var21 
var23 =  prim : int:0 : 
var24 =  method : Carro.f(int) : var0 var23 
var25 =  prim : int:10 : 
var26 =  method : Carro.f(int) : var0 var25 
var27 =  prim : int:100 : 
var28 =  method : Carro.f(int) : var0 var27 
var29 =  prim : int:0 : 
var30 =  method : Carro.f(int) : var0 var29 
var31 =  prim : int:100 : 
var32 =  method : Carro.f(int) : var0 var31 
var33 =  prim : int:100 : 
var34 =  method : Carro.f(int) : var0 var33 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Making index 21 inactive (value is a primitive)
Making index 22 inactive (value is a primitive)
Making index 23 inactive (value is a primitive)
Making index 24 inactive (value is a primitive)
Making index 25 inactive (value is a primitive)
Making index 26 inactive (value is a primitive)
Making index 27 inactive (value is a primitive)
Making index 28 inactive (value is a primitive)
Making index 29 inactive (value is a primitive)
Making index 30 inactive (value is a primitive)
Making index 31 inactive (value is a primitive)
Making index 32 inactive (value is a primitive)
Making index 33 inactive (value is a primitive)
Making index 34 inactive (value is a primitive)
Adding sequence to active sequences of type class Carro
Sequence after execution: 
Carro var0 = new Carro();
// <NormalExecution object=object-of-type-Carro>;
java.lang.Integer var1 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var2 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var3 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var4 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var5 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var6 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var7 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var8 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var9 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var10 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var11 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var12 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var13 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var14 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var15 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var16 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var17 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var18 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var19 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var20 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var21 = new java.lang.Integer(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var22 = var0.f(1);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var23 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var24 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var25 = new java.lang.Integer(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var26 = var0.f(10);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var27 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var28 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var29 = new java.lang.Integer(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var30 = var0.f(0);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var31 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var32 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
java.lang.Integer var33 = new java.lang.Integer(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
int var34 = var0.f(100);
// <NormalExecution object=object-of-type-java.lang.Integer>;
<randoop.PrimValue, value=10 [var2]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=10 [var10]  : true
<randoop.PrimValue, value=100 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=100 [var20]  : true
<randoop.PrimValue, value=1 [var22]  : true
<randoop.PrimValue, value=0 [var24]  : true
<randoop.PrimValue, value=10 [var26]  : true
<randoop.PrimValue, value=100 [var28]  : true
<randoop.PrimValue, value=0 [var30]  : true
<randoop.PrimValue, value=100 [var32]  : true
<randoop.PrimValue, value=100 [var34]  : true

allSequences.size()=346
